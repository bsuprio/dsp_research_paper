import sys
import serial
import serial.tools.list_ports
import time
import numpy as np
import pandas as pd
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
import math
from scipy import signal
from scipy.fft import fft, fftshift
import sounddevice as sd

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DSP_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 700)
        MainWindow.setMinimumSize(QtCore.QSize(800, 700))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page0 = QtWidgets.QWidget()
        self.page0.setObjectName("page0")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.page0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.page0)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.textBrowser = QtWidgets.QTextBrowser(self.frame_2)
        self.textBrowser.setObjectName("textBrowser")
        self.horizontalLayout.addWidget(self.textBrowser)
        self.verticalLayout_3.addWidget(self.frame_2)
        self.connect_con = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.connect_con.setFont(font)
        self.connect_con.setToolTip("")
        self.connect_con.setToolTipDuration(-1)
        self.connect_con.setStatusTip("")
        self.connect_con.setObjectName("connect_con")
        self.verticalLayout_3.addWidget(self.connect_con)
        self.sig_gen_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_setup.setFont(font)
        self.sig_gen_setup.setObjectName("sig_gen_setup")
        self.verticalLayout_3.addWidget(self.sig_gen_setup)
        self.fir_filter_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_filter_setup.setFont(font)
        self.fir_filter_setup.setObjectName("fir_filter_setup")
        self.verticalLayout_3.addWidget(self.fir_filter_setup)
        self.iir_filter_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_filter_setup.setFont(font)
        self.iir_filter_setup.setObjectName("iir_filter_setup")
        self.verticalLayout_3.addWidget(self.iir_filter_setup)
        self.conv_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.conv_setup.setFont(font)
        self.conv_setup.setObjectName("conv_setup")
        self.verticalLayout_3.addWidget(self.conv_setup)
        self.fft_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fft_setup.setFont(font)
        self.fft_setup.setObjectName("fft_setup")
        self.verticalLayout_3.addWidget(self.fft_setup)
        self.iir_notch_setup = QtWidgets.QPushButton(self.page0)
        self.iir_notch_setup.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_setup.setFont(font)
        self.iir_notch_setup.setObjectName("iir_notch_setup")
        self.verticalLayout_3.addWidget(self.iir_notch_setup)
        self.dtmf_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.dtmf_setup.setFont(font)
        self.dtmf_setup.setObjectName("dtmf_setup")
        self.verticalLayout_3.addWidget(self.dtmf_setup)
        self.sig_gen_py_setup = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_py_setup.setFont(font)
        self.sig_gen_py_setup.setObjectName("sig_gen_py_setup")
        self.verticalLayout_3.addWidget(self.sig_gen_py_setup)
        self.close_connect = QtWidgets.QPushButton(self.page0)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.close_connect.setFont(font)
        self.close_connect.setObjectName("close_connect")
        self.verticalLayout_3.addWidget(self.close_connect)
        self.stackedWidget.addWidget(self.page0)
        self.page_con_sig_gen = QtWidgets.QWidget()
        self.page_con_sig_gen.setObjectName("page_con_sig_gen")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.page_con_sig_gen)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.frame_6 = QtWidgets.QFrame(self.page_con_sig_gen)
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.verticalLayout_60 = QtWidgets.QVBoxLayout(self.frame_6)
        self.verticalLayout_60.setObjectName("verticalLayout_60")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.frame_6)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.verticalLayout_60.addWidget(self.textBrowser_2)
        self.label_8 = QtWidgets.QLabel(self.frame_6)
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.verticalLayout_60.addWidget(self.label_8)
        self.label = QtWidgets.QLabel(self.frame_6)
        font = QtGui.QFont()
        font.setPointSize(36)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setText("")
        self.label.setObjectName("label")
        self.verticalLayout_60.addWidget(self.label)
        self.verticalLayout_11.addWidget(self.frame_6)
        self.frame_7 = QtWidgets.QFrame(self.page_con_sig_gen)
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame_7)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.frame_38 = QtWidgets.QFrame(self.frame_7)
        self.frame_38.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_38.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_38.setObjectName("frame_38")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_38)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_6 = QtWidgets.QLabel(self.frame_38)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_12.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.frame_38)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_12.addWidget(self.label_7)
        self.horizontalLayout_8.addWidget(self.frame_38)
        self.frame_39 = QtWidgets.QFrame(self.frame_7)
        self.frame_39.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_39.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_39.setObjectName("frame_39")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.frame_39)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.sig_gen_type = QtWidgets.QComboBox(self.frame_39)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_type.setFont(font)
        self.sig_gen_type.setObjectName("sig_gen_type")
        self.sig_gen_type.addItem("")
        self.sig_gen_type.addItem("")
        self.sig_gen_type.addItem("")
        self.sig_gen_type.addItem("")
        self.sig_gen_type.addItem("")
        self.verticalLayout_14.addWidget(self.sig_gen_type)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.sig_gen_sli = QtWidgets.QSlider(self.frame_39)
        self.sig_gen_sli.setMaximum(10000)
        self.sig_gen_sli.setSingleStep(100)
        self.sig_gen_sli.setSliderPosition(0)
        self.sig_gen_sli.setOrientation(QtCore.Qt.Horizontal)
        self.sig_gen_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_gen_sli.setTickInterval(1000)
        self.sig_gen_sli.setObjectName("sig_gen_sli")
        self.horizontalLayout_5.addWidget(self.sig_gen_sli)
        self.sig_gen_spin = QtWidgets.QSpinBox(self.frame_39)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_spin.setFont(font)
        self.sig_gen_spin.setMaximum(10000)
        self.sig_gen_spin.setSingleStep(100)
        self.sig_gen_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.sig_gen_spin.setDisplayIntegerBase(10)
        self.sig_gen_spin.setObjectName("sig_gen_spin")
        self.horizontalLayout_5.addWidget(self.sig_gen_spin)
        self.verticalLayout_14.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_8.addWidget(self.frame_39)
        self.verticalLayout_11.addWidget(self.frame_7)
        self.frame_8 = QtWidgets.QFrame(self.page_con_sig_gen)
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.frame_8)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.sig_gen_set = QtWidgets.QPushButton(self.frame_8)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_set.setFont(font)
        self.sig_gen_set.setObjectName("sig_gen_set")
        self.verticalLayout_13.addWidget(self.sig_gen_set)
        self.label_10 = QtWidgets.QLabel(self.frame_8)
        self.label_10.setText("")
        self.label_10.setObjectName("label_10")
        self.verticalLayout_13.addWidget(self.label_10)
        self.sig_gen_plot = QtWidgets.QPushButton(self.frame_8)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_plot.setFont(font)
        self.sig_gen_plot.setObjectName("sig_gen_plot")
        self.verticalLayout_13.addWidget(self.sig_gen_plot)
        self.label_11 = QtWidgets.QLabel(self.frame_8)
        self.label_11.setText("")
        self.label_11.setObjectName("label_11")
        self.verticalLayout_13.addWidget(self.label_11)
        self.sig_gen_con_back = QtWidgets.QPushButton(self.frame_8)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_con_back.setFont(font)
        self.sig_gen_con_back.setObjectName("sig_gen_con_back")
        self.verticalLayout_13.addWidget(self.sig_gen_con_back)
        self.verticalLayout_16.addLayout(self.verticalLayout_13)
        self.verticalLayout_11.addWidget(self.frame_8)
        self.stackedWidget.addWidget(self.page_con_sig_gen)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.verticalLayout_33 = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout_33.setObjectName("verticalLayout_33")
        self.frame_20 = QtWidgets.QFrame(self.page)
        self.frame_20.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_20.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_20.setObjectName("frame_20")
        self.verticalLayout_35 = QtWidgets.QVBoxLayout(self.frame_20)
        self.verticalLayout_35.setObjectName("verticalLayout_35")
        self.textBrowser_7 = QtWidgets.QTextBrowser(self.frame_20)
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.verticalLayout_35.addWidget(self.textBrowser_7)
        self.verticalLayout_33.addWidget(self.frame_20)
        self.frame_16 = QtWidgets.QFrame(self.page)
        self.frame_16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.frame_16)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.frame_17 = QtWidgets.QFrame(self.frame_16)
        self.frame_17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_17.setObjectName("frame_17")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout(self.frame_17)
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.label_12 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.verticalLayout_31.addWidget(self.label_12)
        self.label_13 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setObjectName("label_13")
        self.verticalLayout_31.addWidget(self.label_13)
        self.label_31 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_31.setFont(font)
        self.label_31.setAlignment(QtCore.Qt.AlignCenter)
        self.label_31.setObjectName("label_31")
        self.verticalLayout_31.addWidget(self.label_31)
        self.label_32 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_32.setFont(font)
        self.label_32.setAlignment(QtCore.Qt.AlignCenter)
        self.label_32.setObjectName("label_32")
        self.verticalLayout_31.addWidget(self.label_32)
        self.label_33 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_33.setFont(font)
        self.label_33.setAlignment(QtCore.Qt.AlignCenter)
        self.label_33.setObjectName("label_33")
        self.verticalLayout_31.addWidget(self.label_33)
        self.label_34 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_34.setFont(font)
        self.label_34.setAlignment(QtCore.Qt.AlignCenter)
        self.label_34.setObjectName("label_34")
        self.verticalLayout_31.addWidget(self.label_34)
        self.label_35 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_35.setFont(font)
        self.label_35.setAlignment(QtCore.Qt.AlignCenter)
        self.label_35.setObjectName("label_35")
        self.verticalLayout_31.addWidget(self.label_35)
        self.label_36 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_36.setFont(font)
        self.label_36.setAlignment(QtCore.Qt.AlignCenter)
        self.label_36.setObjectName("label_36")
        self.verticalLayout_31.addWidget(self.label_36)
        self.label_40 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_40.setFont(font)
        self.label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.label_40.setObjectName("label_40")
        self.verticalLayout_31.addWidget(self.label_40)
        self.label_39 = QtWidgets.QLabel(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_39.setFont(font)
        self.label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.label_39.setObjectName("label_39")
        self.verticalLayout_31.addWidget(self.label_39)
        self.fir_set_param = QtWidgets.QPushButton(self.frame_17)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fir_set_param.setFont(font)
        self.fir_set_param.setObjectName("fir_set_param")
        self.verticalLayout_31.addWidget(self.fir_set_param)
        self.horizontalLayout_13.addWidget(self.frame_17)
        self.frame_18 = QtWidgets.QFrame(self.frame_16)
        self.frame_18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_18.setObjectName("frame_18")
        self.verticalLayout_32 = QtWidgets.QVBoxLayout(self.frame_18)
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.fir_filter_type = QtWidgets.QComboBox(self.frame_18)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_filter_type.setFont(font)
        self.fir_filter_type.setObjectName("fir_filter_type")
        self.fir_filter_type.addItem("")
        self.fir_filter_type.addItem("")
        self.fir_filter_type.addItem("")
        self.fir_filter_type.addItem("")
        self.verticalLayout_32.addWidget(self.fir_filter_type)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.fir_fs_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fs_sli.setMaximum(20000)
        self.fir_fs_sli.setSingleStep(1000)
        self.fir_fs_sli.setPageStep(1000)
        self.fir_fs_sli.setSliderPosition(0)
        self.fir_fs_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fs_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fs_sli.setTickInterval(1000)
        self.fir_fs_sli.setObjectName("fir_fs_sli")
        self.horizontalLayout_20.addWidget(self.fir_fs_sli)
        self.fir_fs_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fs_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fs_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fs_spin.setFont(font)
        self.fir_fs_spin.setMaximum(20000)
        self.fir_fs_spin.setSingleStep(1000)
        self.fir_fs_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fs_spin.setDisplayIntegerBase(10)
        self.fir_fs_spin.setObjectName("fir_fs_spin")
        self.horizontalLayout_20.addWidget(self.fir_fs_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_20)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.fir_fpb0_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fpb0_sli.setMaximum(10000)
        self.fir_fpb0_sli.setSingleStep(100)
        self.fir_fpb0_sli.setSliderPosition(0)
        self.fir_fpb0_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fpb0_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fpb0_sli.setTickInterval(500)
        self.fir_fpb0_sli.setObjectName("fir_fpb0_sli")
        self.horizontalLayout_29.addWidget(self.fir_fpb0_sli)
        self.fir_fpb0_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fpb0_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fpb0_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fpb0_spin.setFont(font)
        self.fir_fpb0_spin.setMaximum(10000)
        self.fir_fpb0_spin.setSingleStep(10)
        self.fir_fpb0_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fpb0_spin.setDisplayIntegerBase(10)
        self.fir_fpb0_spin.setObjectName("fir_fpb0_spin")
        self.horizontalLayout_29.addWidget(self.fir_fpb0_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_29)
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.fir_fsb0_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fsb0_sli.setMaximum(10000)
        self.fir_fsb0_sli.setSingleStep(100)
        self.fir_fsb0_sli.setSliderPosition(0)
        self.fir_fsb0_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fsb0_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fsb0_sli.setTickInterval(500)
        self.fir_fsb0_sli.setObjectName("fir_fsb0_sli")
        self.horizontalLayout_27.addWidget(self.fir_fsb0_sli)
        self.fir_fsb0_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fsb0_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fsb0_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fsb0_spin.setFont(font)
        self.fir_fsb0_spin.setMaximum(10000)
        self.fir_fsb0_spin.setSingleStep(10)
        self.fir_fsb0_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fsb0_spin.setDisplayIntegerBase(10)
        self.fir_fsb0_spin.setObjectName("fir_fsb0_spin")
        self.horizontalLayout_27.addWidget(self.fir_fsb0_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_27)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.fir_fpb1_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fpb1_sli.setMaximum(10000)
        self.fir_fpb1_sli.setSingleStep(100)
        self.fir_fpb1_sli.setSliderPosition(0)
        self.fir_fpb1_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fpb1_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fpb1_sli.setTickInterval(500)
        self.fir_fpb1_sli.setObjectName("fir_fpb1_sli")
        self.horizontalLayout_24.addWidget(self.fir_fpb1_sli)
        self.fir_fpb1_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fpb1_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fpb1_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fpb1_spin.setFont(font)
        self.fir_fpb1_spin.setMaximum(10000)
        self.fir_fpb1_spin.setSingleStep(10)
        self.fir_fpb1_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fpb1_spin.setDisplayIntegerBase(10)
        self.fir_fpb1_spin.setObjectName("fir_fpb1_spin")
        self.horizontalLayout_24.addWidget(self.fir_fpb1_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_24)
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.fir_fsb1_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fsb1_sli.setMaximum(10000)
        self.fir_fsb1_sli.setSingleStep(100)
        self.fir_fsb1_sli.setSliderPosition(0)
        self.fir_fsb1_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fsb1_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fsb1_sli.setTickInterval(500)
        self.fir_fsb1_sli.setObjectName("fir_fsb1_sli")
        self.horizontalLayout_25.addWidget(self.fir_fsb1_sli)
        self.fir_fsb1_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fsb1_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fsb1_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fsb1_spin.setFont(font)
        self.fir_fsb1_spin.setMaximum(10000)
        self.fir_fsb1_spin.setSingleStep(10)
        self.fir_fsb1_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fsb1_spin.setDisplayIntegerBase(10)
        self.fir_fsb1_spin.setObjectName("fir_fsb1_spin")
        self.horizontalLayout_25.addWidget(self.fir_fsb1_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_25)
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.fir_fpb2_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fpb2_sli.setMaximum(10000)
        self.fir_fpb2_sli.setSingleStep(100)
        self.fir_fpb2_sli.setSliderPosition(0)
        self.fir_fpb2_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fpb2_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fpb2_sli.setTickInterval(500)
        self.fir_fpb2_sli.setObjectName("fir_fpb2_sli")
        self.horizontalLayout_26.addWidget(self.fir_fpb2_sli)
        self.fir_fpb2_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fpb2_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fpb2_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fpb2_spin.setFont(font)
        self.fir_fpb2_spin.setMaximum(10000)
        self.fir_fpb2_spin.setSingleStep(10)
        self.fir_fpb2_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fpb2_spin.setDisplayIntegerBase(10)
        self.fir_fpb2_spin.setObjectName("fir_fpb2_spin")
        self.horizontalLayout_26.addWidget(self.fir_fpb2_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_26)
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.fir_fsb2_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_fsb2_sli.setMaximum(10000)
        self.fir_fsb2_sli.setSingleStep(100)
        self.fir_fsb2_sli.setSliderPosition(0)
        self.fir_fsb2_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_fsb2_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_fsb2_sli.setTickInterval(500)
        self.fir_fsb2_sli.setObjectName("fir_fsb2_sli")
        self.horizontalLayout_23.addWidget(self.fir_fsb2_sli)
        self.fir_fsb2_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_fsb2_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_fsb2_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_fsb2_spin.setFont(font)
        self.fir_fsb2_spin.setMaximum(10000)
        self.fir_fsb2_spin.setSingleStep(10)
        self.fir_fsb2_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_fsb2_spin.setDisplayIntegerBase(10)
        self.fir_fsb2_spin.setObjectName("fir_fsb2_spin")
        self.horizontalLayout_23.addWidget(self.fir_fsb2_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_23)
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.fir_ap_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_ap_sli.setMinimum(1)
        self.fir_ap_sli.setMaximum(10)
        self.fir_ap_sli.setSingleStep(1)
        self.fir_ap_sli.setPageStep(1)
        self.fir_ap_sli.setSliderPosition(1)
        self.fir_ap_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_ap_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_ap_sli.setTickInterval(1)
        self.fir_ap_sli.setObjectName("fir_ap_sli")
        self.horizontalLayout_22.addWidget(self.fir_ap_sli)
        self.fir_ap_spin = QtWidgets.QDoubleSpinBox(self.frame_18)
        self.fir_ap_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_ap_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_ap_spin.setFont(font)
        self.fir_ap_spin.setDecimals(1)
        self.fir_ap_spin.setMinimum(1.0)
        self.fir_ap_spin.setMaximum(10.0)
        self.fir_ap_spin.setSingleStep(0.1)
        self.fir_ap_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_ap_spin.setObjectName("fir_ap_spin")
        self.horizontalLayout_22.addWidget(self.fir_ap_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_22)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.fir_as_sli = QtWidgets.QSlider(self.frame_18)
        self.fir_as_sli.setMinimum(10)
        self.fir_as_sli.setMaximum(100)
        self.fir_as_sli.setSingleStep(10)
        self.fir_as_sli.setSliderPosition(10)
        self.fir_as_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fir_as_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fir_as_sli.setTickInterval(10)
        self.fir_as_sli.setObjectName("fir_as_sli")
        self.horizontalLayout_21.addWidget(self.fir_as_sli)
        self.fir_as_spin = QtWidgets.QSpinBox(self.frame_18)
        self.fir_as_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.fir_as_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_as_spin.setFont(font)
        self.fir_as_spin.setMinimum(10)
        self.fir_as_spin.setMaximum(100)
        self.fir_as_spin.setSingleStep(1)
        self.fir_as_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fir_as_spin.setDisplayIntegerBase(10)
        self.fir_as_spin.setObjectName("fir_as_spin")
        self.horizontalLayout_21.addWidget(self.fir_as_spin)
        self.verticalLayout_32.addLayout(self.horizontalLayout_21)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.fir_filter_coeff = QtWidgets.QPushButton(self.frame_18)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fir_filter_coeff.setFont(font)
        self.fir_filter_coeff.setObjectName("fir_filter_coeff")
        self.horizontalLayout_15.addWidget(self.fir_filter_coeff)
        self.fir_n_val = QtWidgets.QLabel(self.frame_18)
        self.fir_n_val.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_n_val.setFont(font)
        self.fir_n_val.setText("")
        self.fir_n_val.setObjectName("fir_n_val")
        self.horizontalLayout_15.addWidget(self.fir_n_val)
        self.verticalLayout_32.addLayout(self.horizontalLayout_15)
        self.horizontalLayout_13.addWidget(self.frame_18)
        self.horizontalLayout_14.addLayout(self.horizontalLayout_13)
        self.verticalLayout_33.addWidget(self.frame_16)
        self.frame_19 = QtWidgets.QFrame(self.page)
        self.frame_19.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_19.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_19.setObjectName("frame_19")
        self.verticalLayout_34 = QtWidgets.QVBoxLayout(self.frame_19)
        self.verticalLayout_34.setObjectName("verticalLayout_34")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.fir_send_coeff = QtWidgets.QPushButton(self.frame_19)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fir_send_coeff.setFont(font)
        self.fir_send_coeff.setObjectName("fir_send_coeff")
        self.horizontalLayout_6.addWidget(self.fir_send_coeff)
        self.fir_filter_mag = QtWidgets.QPushButton(self.frame_19)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fir_filter_mag.setFont(font)
        self.fir_filter_mag.setObjectName("fir_filter_mag")
        self.horizontalLayout_6.addWidget(self.fir_filter_mag)
        self.verticalLayout_34.addLayout(self.horizontalLayout_6)
        self.fir_inout_time = QtWidgets.QPushButton(self.frame_19)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fir_inout_time.setFont(font)
        self.fir_inout_time.setObjectName("fir_inout_time")
        self.verticalLayout_34.addWidget(self.fir_inout_time)
        self.fir_inout_fft = QtWidgets.QPushButton(self.frame_19)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fir_inout_fft.setFont(font)
        self.fir_inout_fft.setObjectName("fir_inout_fft")
        self.verticalLayout_34.addWidget(self.fir_inout_fft)
        self.fir_back = QtWidgets.QPushButton(self.frame_19)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fir_back.setFont(font)
        self.fir_back.setObjectName("fir_back")
        self.verticalLayout_34.addWidget(self.fir_back)
        self.verticalLayout_33.addWidget(self.frame_19)
        self.stackedWidget.addWidget(self.page)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.verticalLayout_59 = QtWidgets.QVBoxLayout(self.page_5)
        self.verticalLayout_59.setObjectName("verticalLayout_59")
        self.frame_37 = QtWidgets.QFrame(self.page_5)
        self.frame_37.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_37.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_37.setObjectName("frame_37")
        self.verticalLayout_58 = QtWidgets.QVBoxLayout(self.frame_37)
        self.verticalLayout_58.setObjectName("verticalLayout_58")
        self.textBrowser_12 = QtWidgets.QTextBrowser(self.frame_37)
        self.textBrowser_12.setObjectName("textBrowser_12")
        self.verticalLayout_58.addWidget(self.textBrowser_12)
        self.verticalLayout_59.addWidget(self.frame_37)
        self.frame_34 = QtWidgets.QFrame(self.page_5)
        self.frame_34.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_34.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_34.setObjectName("frame_34")
        self.horizontalLayout_44 = QtWidgets.QHBoxLayout(self.frame_34)
        self.horizontalLayout_44.setObjectName("horizontalLayout_44")
        self.horizontalLayout_45 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_45.setObjectName("horizontalLayout_45")
        self.frame_35 = QtWidgets.QFrame(self.frame_34)
        self.frame_35.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_35.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_35.setObjectName("frame_35")
        self.verticalLayout_56 = QtWidgets.QVBoxLayout(self.frame_35)
        self.verticalLayout_56.setObjectName("verticalLayout_56")
        self.label_60 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_60.setFont(font)
        self.label_60.setAlignment(QtCore.Qt.AlignCenter)
        self.label_60.setObjectName("label_60")
        self.verticalLayout_56.addWidget(self.label_60)
        self.label_78 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_78.setFont(font)
        self.label_78.setAlignment(QtCore.Qt.AlignCenter)
        self.label_78.setObjectName("label_78")
        self.verticalLayout_56.addWidget(self.label_78)
        self.label_61 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_61.setFont(font)
        self.label_61.setAlignment(QtCore.Qt.AlignCenter)
        self.label_61.setObjectName("label_61")
        self.verticalLayout_56.addWidget(self.label_61)
        self.label_62 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_62.setFont(font)
        self.label_62.setAlignment(QtCore.Qt.AlignCenter)
        self.label_62.setObjectName("label_62")
        self.verticalLayout_56.addWidget(self.label_62)
        self.label_63 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_63.setFont(font)
        self.label_63.setAlignment(QtCore.Qt.AlignCenter)
        self.label_63.setObjectName("label_63")
        self.verticalLayout_56.addWidget(self.label_63)
        self.label_64 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_64.setFont(font)
        self.label_64.setAlignment(QtCore.Qt.AlignCenter)
        self.label_64.setObjectName("label_64")
        self.verticalLayout_56.addWidget(self.label_64)
        self.label_65 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_65.setFont(font)
        self.label_65.setAlignment(QtCore.Qt.AlignCenter)
        self.label_65.setObjectName("label_65")
        self.verticalLayout_56.addWidget(self.label_65)
        self.label_66 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_66.setFont(font)
        self.label_66.setAlignment(QtCore.Qt.AlignCenter)
        self.label_66.setObjectName("label_66")
        self.verticalLayout_56.addWidget(self.label_66)
        self.label_67 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_67.setFont(font)
        self.label_67.setAlignment(QtCore.Qt.AlignCenter)
        self.label_67.setObjectName("label_67")
        self.verticalLayout_56.addWidget(self.label_67)
        self.label_68 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_68.setFont(font)
        self.label_68.setAlignment(QtCore.Qt.AlignCenter)
        self.label_68.setObjectName("label_68")
        self.verticalLayout_56.addWidget(self.label_68)
        self.label_69 = QtWidgets.QLabel(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_69.setFont(font)
        self.label_69.setAlignment(QtCore.Qt.AlignCenter)
        self.label_69.setObjectName("label_69")
        self.verticalLayout_56.addWidget(self.label_69)
        self.iir_set_param = QtWidgets.QPushButton(self.frame_35)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_set_param.setFont(font)
        self.iir_set_param.setObjectName("iir_set_param")
        self.verticalLayout_56.addWidget(self.iir_set_param)
        self.horizontalLayout_45.addWidget(self.frame_35)
        self.frame_36 = QtWidgets.QFrame(self.frame_34)
        self.frame_36.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_36.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_36.setObjectName("frame_36")
        self.verticalLayout_57 = QtWidgets.QVBoxLayout(self.frame_36)
        self.verticalLayout_57.setObjectName("verticalLayout_57")
        self.iir_filter_type = QtWidgets.QComboBox(self.frame_36)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_filter_type.setFont(font)
        self.iir_filter_type.setObjectName("iir_filter_type")
        self.iir_filter_type.addItem("")
        self.iir_filter_type.addItem("")
        self.iir_filter_type.addItem("")
        self.iir_filter_type.addItem("")
        self.verticalLayout_57.addWidget(self.iir_filter_type)
        self.iir_filter_func_type = QtWidgets.QComboBox(self.frame_36)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_filter_func_type.setFont(font)
        self.iir_filter_func_type.setObjectName("iir_filter_func_type")
        self.iir_filter_func_type.addItem("")
        self.iir_filter_func_type.addItem("")
        self.iir_filter_func_type.addItem("")
        self.iir_filter_func_type.addItem("")
        self.verticalLayout_57.addWidget(self.iir_filter_func_type)
        self.horizontalLayout_46 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_46.setObjectName("horizontalLayout_46")
        self.iir_fs_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fs_sli.setMaximum(20000)
        self.iir_fs_sli.setSingleStep(1000)
        self.iir_fs_sli.setPageStep(1000)
        self.iir_fs_sli.setSliderPosition(0)
        self.iir_fs_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fs_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fs_sli.setTickInterval(1000)
        self.iir_fs_sli.setObjectName("iir_fs_sli")
        self.horizontalLayout_46.addWidget(self.iir_fs_sli)
        self.iir_fs_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fs_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fs_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fs_spin.setFont(font)
        self.iir_fs_spin.setMaximum(20000)
        self.iir_fs_spin.setSingleStep(1000)
        self.iir_fs_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fs_spin.setDisplayIntegerBase(10)
        self.iir_fs_spin.setObjectName("iir_fs_spin")
        self.horizontalLayout_46.addWidget(self.iir_fs_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_46)
        self.horizontalLayout_47 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_47.setObjectName("horizontalLayout_47")
        self.iir_fpb0_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fpb0_sli.setMaximum(10000)
        self.iir_fpb0_sli.setSingleStep(100)
        self.iir_fpb0_sli.setSliderPosition(0)
        self.iir_fpb0_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fpb0_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fpb0_sli.setTickInterval(500)
        self.iir_fpb0_sli.setObjectName("iir_fpb0_sli")
        self.horizontalLayout_47.addWidget(self.iir_fpb0_sli)
        self.iir_fpb0_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fpb0_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fpb0_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fpb0_spin.setFont(font)
        self.iir_fpb0_spin.setMaximum(10000)
        self.iir_fpb0_spin.setSingleStep(10)
        self.iir_fpb0_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fpb0_spin.setDisplayIntegerBase(10)
        self.iir_fpb0_spin.setObjectName("iir_fpb0_spin")
        self.horizontalLayout_47.addWidget(self.iir_fpb0_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_47)
        self.horizontalLayout_48 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_48.setObjectName("horizontalLayout_48")
        self.iir_fsb0_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fsb0_sli.setMaximum(10000)
        self.iir_fsb0_sli.setSingleStep(100)
        self.iir_fsb0_sli.setSliderPosition(0)
        self.iir_fsb0_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fsb0_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fsb0_sli.setTickInterval(500)
        self.iir_fsb0_sli.setObjectName("iir_fsb0_sli")
        self.horizontalLayout_48.addWidget(self.iir_fsb0_sli)
        self.iir_fsb0_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fsb0_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fsb0_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fsb0_spin.setFont(font)
        self.iir_fsb0_spin.setMaximum(10000)
        self.iir_fsb0_spin.setSingleStep(10)
        self.iir_fsb0_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fsb0_spin.setDisplayIntegerBase(10)
        self.iir_fsb0_spin.setObjectName("iir_fsb0_spin")
        self.horizontalLayout_48.addWidget(self.iir_fsb0_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_48)
        self.horizontalLayout_49 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_49.setObjectName("horizontalLayout_49")
        self.iir_fpb1_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fpb1_sli.setMaximum(10000)
        self.iir_fpb1_sli.setSingleStep(100)
        self.iir_fpb1_sli.setSliderPosition(0)
        self.iir_fpb1_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fpb1_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fpb1_sli.setTickInterval(500)
        self.iir_fpb1_sli.setObjectName("iir_fpb1_sli")
        self.horizontalLayout_49.addWidget(self.iir_fpb1_sli)
        self.iir_fpb1_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fpb1_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fpb1_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fpb1_spin.setFont(font)
        self.iir_fpb1_spin.setMaximum(10000)
        self.iir_fpb1_spin.setSingleStep(10)
        self.iir_fpb1_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fpb1_spin.setDisplayIntegerBase(10)
        self.iir_fpb1_spin.setObjectName("iir_fpb1_spin")
        self.horizontalLayout_49.addWidget(self.iir_fpb1_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_49)
        self.horizontalLayout_50 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_50.setObjectName("horizontalLayout_50")
        self.iir_fsb1_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fsb1_sli.setMaximum(10000)
        self.iir_fsb1_sli.setSingleStep(100)
        self.iir_fsb1_sli.setSliderPosition(0)
        self.iir_fsb1_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fsb1_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fsb1_sli.setTickInterval(500)
        self.iir_fsb1_sli.setObjectName("iir_fsb1_sli")
        self.horizontalLayout_50.addWidget(self.iir_fsb1_sli)
        self.iir_fsb1_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fsb1_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fsb1_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fsb1_spin.setFont(font)
        self.iir_fsb1_spin.setMaximum(10000)
        self.iir_fsb1_spin.setSingleStep(10)
        self.iir_fsb1_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fsb1_spin.setDisplayIntegerBase(10)
        self.iir_fsb1_spin.setObjectName("iir_fsb1_spin")
        self.horizontalLayout_50.addWidget(self.iir_fsb1_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_50)
        self.horizontalLayout_51 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_51.setObjectName("horizontalLayout_51")
        self.iir_fpb2_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fpb2_sli.setMaximum(10000)
        self.iir_fpb2_sli.setSingleStep(100)
        self.iir_fpb2_sli.setSliderPosition(0)
        self.iir_fpb2_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fpb2_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fpb2_sli.setTickInterval(500)
        self.iir_fpb2_sli.setObjectName("iir_fpb2_sli")
        self.horizontalLayout_51.addWidget(self.iir_fpb2_sli)
        self.iir_fpb2_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fpb2_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fpb2_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fpb2_spin.setFont(font)
        self.iir_fpb2_spin.setMaximum(10000)
        self.iir_fpb2_spin.setSingleStep(10)
        self.iir_fpb2_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fpb2_spin.setDisplayIntegerBase(10)
        self.iir_fpb2_spin.setObjectName("iir_fpb2_spin")
        self.horizontalLayout_51.addWidget(self.iir_fpb2_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_51)
        self.horizontalLayout_52 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_52.setObjectName("horizontalLayout_52")
        self.iir_fsb2_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_fsb2_sli.setMaximum(10000)
        self.iir_fsb2_sli.setSingleStep(100)
        self.iir_fsb2_sli.setSliderPosition(0)
        self.iir_fsb2_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_fsb2_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_fsb2_sli.setTickInterval(500)
        self.iir_fsb2_sli.setObjectName("iir_fsb2_sli")
        self.horizontalLayout_52.addWidget(self.iir_fsb2_sli)
        self.iir_fsb2_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_fsb2_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_fsb2_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_fsb2_spin.setFont(font)
        self.iir_fsb2_spin.setMaximum(10000)
        self.iir_fsb2_spin.setSingleStep(10)
        self.iir_fsb2_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_fsb2_spin.setDisplayIntegerBase(10)
        self.iir_fsb2_spin.setObjectName("iir_fsb2_spin")
        self.horizontalLayout_52.addWidget(self.iir_fsb2_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_52)
        self.horizontalLayout_53 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_53.setObjectName("horizontalLayout_53")
        self.iir_ap_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_ap_sli.setMinimum(0)
        self.iir_ap_sli.setMaximum(10)
        self.iir_ap_sli.setSingleStep(1)
        self.iir_ap_sli.setPageStep(1)
        self.iir_ap_sli.setProperty("value", 0)
        self.iir_ap_sli.setSliderPosition(0)
        self.iir_ap_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_ap_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_ap_sli.setTickInterval(0)
        self.iir_ap_sli.setObjectName("iir_ap_sli")
        self.horizontalLayout_53.addWidget(self.iir_ap_sli)
        self.iir_ap_spin = QtWidgets.QDoubleSpinBox(self.frame_36)
        self.iir_ap_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_ap_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_ap_spin.setFont(font)
        self.iir_ap_spin.setDecimals(4)
        self.iir_ap_spin.setMinimum(0.01)
        self.iir_ap_spin.setMaximum(10.0)
        self.iir_ap_spin.setSingleStep(0.01)
        self.iir_ap_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_ap_spin.setProperty("value", 0.1)
        self.iir_ap_spin.setObjectName("iir_ap_spin")
        self.horizontalLayout_53.addWidget(self.iir_ap_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_53)
        self.horizontalLayout_54 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_54.setObjectName("horizontalLayout_54")
        self.iir_as_sli = QtWidgets.QSlider(self.frame_36)
        self.iir_as_sli.setMinimum(10)
        self.iir_as_sli.setMaximum(100)
        self.iir_as_sli.setSingleStep(10)
        self.iir_as_sli.setSliderPosition(10)
        self.iir_as_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_as_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_as_sli.setTickInterval(10)
        self.iir_as_sli.setObjectName("iir_as_sli")
        self.horizontalLayout_54.addWidget(self.iir_as_sli)
        self.iir_as_spin = QtWidgets.QSpinBox(self.frame_36)
        self.iir_as_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_as_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_as_spin.setFont(font)
        self.iir_as_spin.setMinimum(10)
        self.iir_as_spin.setMaximum(100)
        self.iir_as_spin.setSingleStep(1)
        self.iir_as_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_as_spin.setDisplayIntegerBase(10)
        self.iir_as_spin.setObjectName("iir_as_spin")
        self.horizontalLayout_54.addWidget(self.iir_as_spin)
        self.verticalLayout_57.addLayout(self.horizontalLayout_54)
        self.horizontalLayout_55 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_55.setObjectName("horizontalLayout_55")
        self.iir_filter_coeff = QtWidgets.QPushButton(self.frame_36)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_filter_coeff.setFont(font)
        self.iir_filter_coeff.setObjectName("iir_filter_coeff")
        self.horizontalLayout_55.addWidget(self.iir_filter_coeff)
        self.iir_n_val = QtWidgets.QLabel(self.frame_36)
        self.iir_n_val.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_n_val.setFont(font)
        self.iir_n_val.setText("")
        self.iir_n_val.setObjectName("iir_n_val")
        self.horizontalLayout_55.addWidget(self.iir_n_val)
        self.verticalLayout_57.addLayout(self.horizontalLayout_55)
        self.horizontalLayout_45.addWidget(self.frame_36)
        self.horizontalLayout_44.addLayout(self.horizontalLayout_45)
        self.verticalLayout_59.addWidget(self.frame_34)
        self.frame_33 = QtWidgets.QFrame(self.page_5)
        self.frame_33.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_33.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_33.setObjectName("frame_33")
        self.verticalLayout_55 = QtWidgets.QVBoxLayout(self.frame_33)
        self.verticalLayout_55.setObjectName("verticalLayout_55")
        self.horizontalLayout_57 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_57.setObjectName("horizontalLayout_57")
        self.iir_send_coeff = QtWidgets.QPushButton(self.frame_33)
        self.iir_send_coeff.setMaximumSize(QtCore.QSize(16777215, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_send_coeff.setFont(font)
        self.iir_send_coeff.setObjectName("iir_send_coeff")
        self.horizontalLayout_57.addWidget(self.iir_send_coeff)
        self.iir_filter_mag = QtWidgets.QPushButton(self.frame_33)
        self.iir_filter_mag.setMaximumSize(QtCore.QSize(16777215, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_filter_mag.setFont(font)
        self.iir_filter_mag.setObjectName("iir_filter_mag")
        self.horizontalLayout_57.addWidget(self.iir_filter_mag)
        self.verticalLayout_55.addLayout(self.horizontalLayout_57)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.iir_inout_time = QtWidgets.QPushButton(self.frame_33)
        self.iir_inout_time.setMaximumSize(QtCore.QSize(16777215, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_inout_time.setFont(font)
        self.iir_inout_time.setObjectName("iir_inout_time")
        self.horizontalLayout_7.addWidget(self.iir_inout_time)
        self.iir_inout_fft = QtWidgets.QPushButton(self.frame_33)
        self.iir_inout_fft.setMaximumSize(QtCore.QSize(16777215, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_inout_fft.setFont(font)
        self.iir_inout_fft.setObjectName("iir_inout_fft")
        self.horizontalLayout_7.addWidget(self.iir_inout_fft)
        self.verticalLayout_55.addLayout(self.horizontalLayout_7)
        self.iir_back = QtWidgets.QPushButton(self.frame_33)
        self.iir_back.setMaximumSize(QtCore.QSize(16777215, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_back.setFont(font)
        self.iir_back.setObjectName("iir_back")
        self.verticalLayout_55.addWidget(self.iir_back)
        self.verticalLayout_59.addWidget(self.frame_33)
        self.stackedWidget.addWidget(self.page_5)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.page_8)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.frame_12 = QtWidgets.QFrame(self.page_8)
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.verticalLayout_27 = QtWidgets.QVBoxLayout(self.frame_12)
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.frame_12)
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.verticalLayout_27.addWidget(self.textBrowser_5)
        self.verticalLayout_20.addWidget(self.frame_12)
        self.frame_11 = QtWidgets.QFrame(self.page_8)
        self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_11.setObjectName("frame_11")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.frame_11)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.frame_13 = QtWidgets.QFrame(self.frame_11)
        self.frame_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout(self.frame_13)
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.label_24 = QtWidgets.QLabel(self.frame_13)
        self.label_24.setText("")
        self.label_24.setObjectName("label_24")
        self.verticalLayout_25.addWidget(self.label_24)
        self.label_70 = QtWidgets.QLabel(self.frame_13)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_70.setFont(font)
        self.label_70.setAlignment(QtCore.Qt.AlignCenter)
        self.label_70.setObjectName("label_70")
        self.verticalLayout_25.addWidget(self.label_70)
        self.label_19 = QtWidgets.QLabel(self.frame_13)
        self.label_19.setText("")
        self.label_19.setObjectName("label_19")
        self.verticalLayout_25.addWidget(self.label_19)
        self.label_71 = QtWidgets.QLabel(self.frame_13)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_71.setFont(font)
        self.label_71.setAlignment(QtCore.Qt.AlignCenter)
        self.label_71.setObjectName("label_71")
        self.verticalLayout_25.addWidget(self.label_71)
        self.label_20 = QtWidgets.QLabel(self.frame_13)
        self.label_20.setText("")
        self.label_20.setObjectName("label_20")
        self.verticalLayout_25.addWidget(self.label_20)
        self.label_72 = QtWidgets.QLabel(self.frame_13)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_72.setFont(font)
        self.label_72.setAlignment(QtCore.Qt.AlignCenter)
        self.label_72.setObjectName("label_72")
        self.verticalLayout_25.addWidget(self.label_72)
        self.label_21 = QtWidgets.QLabel(self.frame_13)
        self.label_21.setText("")
        self.label_21.setObjectName("label_21")
        self.verticalLayout_25.addWidget(self.label_21)
        self.horizontalLayout_10.addWidget(self.frame_13)
        self.frame_14 = QtWidgets.QFrame(self.frame_11)
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.frame_14)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.horizontalLayout_56 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_56.setObjectName("horizontalLayout_56")
        self.conv_fs_sli = QtWidgets.QSlider(self.frame_14)
        self.conv_fs_sli.setMaximum(20000)
        self.conv_fs_sli.setSingleStep(1000)
        self.conv_fs_sli.setPageStep(1000)
        self.conv_fs_sli.setSliderPosition(0)
        self.conv_fs_sli.setOrientation(QtCore.Qt.Horizontal)
        self.conv_fs_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.conv_fs_sli.setTickInterval(1000)
        self.conv_fs_sli.setObjectName("conv_fs_sli")
        self.horizontalLayout_56.addWidget(self.conv_fs_sli)
        self.conv_fs_spin = QtWidgets.QSpinBox(self.frame_14)
        self.conv_fs_spin.setMinimumSize(QtCore.QSize(90, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.conv_fs_spin.setFont(font)
        self.conv_fs_spin.setMaximum(20000)
        self.conv_fs_spin.setSingleStep(1000)
        self.conv_fs_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.conv_fs_spin.setDisplayIntegerBase(10)
        self.conv_fs_spin.setObjectName("conv_fs_spin")
        self.horizontalLayout_56.addWidget(self.conv_fs_spin)
        self.verticalLayout_26.addLayout(self.horizontalLayout_56)
        self.horizontalLayout_59 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_59.setObjectName("horizontalLayout_59")
        self.conv_num_sig = QtWidgets.QComboBox(self.frame_14)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.conv_num_sig.setFont(font)
        self.conv_num_sig.setObjectName("conv_num_sig")
        self.conv_num_sig.addItem("")
        self.conv_num_sig.addItem("")
        self.horizontalLayout_59.addWidget(self.conv_num_sig)
        self.verticalLayout_26.addLayout(self.horizontalLayout_59)
        self.horizontalLayout_60 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_60.setObjectName("horizontalLayout_60")
        self.conv_size_sli = QtWidgets.QSlider(self.frame_14)
        self.conv_size_sli.setMaximum(256)
        self.conv_size_sli.setSingleStep(2)
        self.conv_size_sli.setPageStep(2)
        self.conv_size_sli.setSliderPosition(0)
        self.conv_size_sli.setOrientation(QtCore.Qt.Horizontal)
        self.conv_size_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.conv_size_sli.setTickInterval(8)
        self.conv_size_sli.setObjectName("conv_size_sli")
        self.horizontalLayout_60.addWidget(self.conv_size_sli)
        self.conv_size_spin = QtWidgets.QSpinBox(self.frame_14)
        self.conv_size_spin.setMinimumSize(QtCore.QSize(90, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.conv_size_spin.setFont(font)
        self.conv_size_spin.setMaximum(256)
        self.conv_size_spin.setSingleStep(2)
        self.conv_size_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.conv_size_spin.setDisplayIntegerBase(10)
        self.conv_size_spin.setObjectName("conv_size_spin")
        self.horizontalLayout_60.addWidget(self.conv_size_spin)
        self.verticalLayout_26.addLayout(self.horizontalLayout_60)
        self.horizontalLayout_10.addWidget(self.frame_14)
        self.verticalLayout_24.addLayout(self.horizontalLayout_10)
        self.verticalLayout_20.addWidget(self.frame_11)
        self.frame_10 = QtWidgets.QFrame(self.page_8)
        self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.frame_10)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.conv_send_params = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.conv_send_params.setFont(font)
        self.conv_send_params.setObjectName("conv_send_params")
        self.verticalLayout_21.addWidget(self.conv_send_params)
        self.label_45 = QtWidgets.QLabel(self.frame_10)
        self.label_45.setText("")
        self.label_45.setObjectName("label_45")
        self.verticalLayout_21.addWidget(self.label_45)
        self.conv_inout_time = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.conv_inout_time.setFont(font)
        self.conv_inout_time.setObjectName("conv_inout_time")
        self.verticalLayout_21.addWidget(self.conv_inout_time)
        self.label_18 = QtWidgets.QLabel(self.frame_10)
        self.label_18.setText("")
        self.label_18.setObjectName("label_18")
        self.verticalLayout_21.addWidget(self.label_18)
        self.conv_inout_fft = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.conv_inout_fft.setFont(font)
        self.conv_inout_fft.setObjectName("conv_inout_fft")
        self.verticalLayout_21.addWidget(self.conv_inout_fft)
        self.label_23 = QtWidgets.QLabel(self.frame_10)
        self.label_23.setText("")
        self.label_23.setObjectName("label_23")
        self.verticalLayout_21.addWidget(self.label_23)
        self.conv_back = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.conv_back.setFont(font)
        self.conv_back.setObjectName("conv_back")
        self.verticalLayout_21.addWidget(self.conv_back)
        self.label_22 = QtWidgets.QLabel(self.frame_10)
        self.label_22.setText("")
        self.label_22.setObjectName("label_22")
        self.verticalLayout_21.addWidget(self.label_22)
        self.verticalLayout_20.addWidget(self.frame_10)
        self.stackedWidget.addWidget(self.page_8)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.verticalLayout_38 = QtWidgets.QVBoxLayout(self.page_3)
        self.verticalLayout_38.setObjectName("verticalLayout_38")
        self.frame_24 = QtWidgets.QFrame(self.page_3)
        self.frame_24.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_24.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_24.setObjectName("frame_24")
        self.verticalLayout_37 = QtWidgets.QVBoxLayout(self.frame_24)
        self.verticalLayout_37.setObjectName("verticalLayout_37")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.frame_24)
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.verticalLayout_37.addWidget(self.textBrowser_6)
        self.verticalLayout_38.addWidget(self.frame_24)
        self.frame_15 = QtWidgets.QFrame(self.page_3)
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.verticalLayout_28 = QtWidgets.QVBoxLayout(self.frame_15)
        self.verticalLayout_28.setObjectName("verticalLayout_28")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.frame_21 = QtWidgets.QFrame(self.frame_15)
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.frame_21)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.label_25 = QtWidgets.QLabel(self.frame_21)
        self.label_25.setText("")
        self.label_25.setObjectName("label_25")
        self.verticalLayout_29.addWidget(self.label_25)
        self.label_73 = QtWidgets.QLabel(self.frame_21)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_73.setFont(font)
        self.label_73.setAlignment(QtCore.Qt.AlignCenter)
        self.label_73.setObjectName("label_73")
        self.verticalLayout_29.addWidget(self.label_73)
        self.label_26 = QtWidgets.QLabel(self.frame_21)
        self.label_26.setText("")
        self.label_26.setObjectName("label_26")
        self.verticalLayout_29.addWidget(self.label_26)
        self.label_75 = QtWidgets.QLabel(self.frame_21)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_75.setFont(font)
        self.label_75.setAlignment(QtCore.Qt.AlignCenter)
        self.label_75.setObjectName("label_75")
        self.verticalLayout_29.addWidget(self.label_75)
        self.label_28 = QtWidgets.QLabel(self.frame_21)
        self.label_28.setText("")
        self.label_28.setObjectName("label_28")
        self.verticalLayout_29.addWidget(self.label_28)
        self.horizontalLayout_11.addWidget(self.frame_21)
        self.frame_22 = QtWidgets.QFrame(self.frame_15)
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.verticalLayout_30 = QtWidgets.QVBoxLayout(self.frame_22)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.horizontalLayout_58 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_58.setObjectName("horizontalLayout_58")
        self.fft_fs_sli = QtWidgets.QSlider(self.frame_22)
        self.fft_fs_sli.setMaximum(20000)
        self.fft_fs_sli.setSingleStep(1000)
        self.fft_fs_sli.setPageStep(1000)
        self.fft_fs_sli.setSliderPosition(0)
        self.fft_fs_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fft_fs_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fft_fs_sli.setTickInterval(1000)
        self.fft_fs_sli.setObjectName("fft_fs_sli")
        self.horizontalLayout_58.addWidget(self.fft_fs_sli)
        self.fft_fs_spin = QtWidgets.QSpinBox(self.frame_22)
        self.fft_fs_spin.setMinimumSize(QtCore.QSize(90, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fft_fs_spin.setFont(font)
        self.fft_fs_spin.setMaximum(20000)
        self.fft_fs_spin.setSingleStep(1000)
        self.fft_fs_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fft_fs_spin.setDisplayIntegerBase(10)
        self.fft_fs_spin.setObjectName("fft_fs_spin")
        self.horizontalLayout_58.addWidget(self.fft_fs_spin)
        self.verticalLayout_30.addLayout(self.horizontalLayout_58)
        self.horizontalLayout_61 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_61.setObjectName("horizontalLayout_61")
        self.fft_size_sli = QtWidgets.QSlider(self.frame_22)
        self.fft_size_sli.setMaximum(256)
        self.fft_size_sli.setSingleStep(2)
        self.fft_size_sli.setPageStep(2)
        self.fft_size_sli.setSliderPosition(0)
        self.fft_size_sli.setOrientation(QtCore.Qt.Horizontal)
        self.fft_size_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.fft_size_sli.setTickInterval(8)
        self.fft_size_sli.setObjectName("fft_size_sli")
        self.horizontalLayout_61.addWidget(self.fft_size_sli)
        self.fft_size_spin = QtWidgets.QSpinBox(self.frame_22)
        self.fft_size_spin.setMinimumSize(QtCore.QSize(90, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.fft_size_spin.setFont(font)
        self.fft_size_spin.setMaximum(256)
        self.fft_size_spin.setSingleStep(2)
        self.fft_size_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.fft_size_spin.setDisplayIntegerBase(10)
        self.fft_size_spin.setObjectName("fft_size_spin")
        self.horizontalLayout_61.addWidget(self.fft_size_spin)
        self.verticalLayout_30.addLayout(self.horizontalLayout_61)
        self.horizontalLayout_11.addWidget(self.frame_22)
        self.verticalLayout_28.addLayout(self.horizontalLayout_11)
        self.verticalLayout_38.addWidget(self.frame_15)
        self.frame_23 = QtWidgets.QFrame(self.page_3)
        self.frame_23.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_23.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_23.setObjectName("frame_23")
        self.verticalLayout_36 = QtWidgets.QVBoxLayout(self.frame_23)
        self.verticalLayout_36.setObjectName("verticalLayout_36")
        self.fft_send_params = QtWidgets.QPushButton(self.frame_23)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fft_send_params.setFont(font)
        self.fft_send_params.setObjectName("fft_send_params")
        self.verticalLayout_36.addWidget(self.fft_send_params)
        self.label_46 = QtWidgets.QLabel(self.frame_23)
        self.label_46.setText("")
        self.label_46.setObjectName("label_46")
        self.verticalLayout_36.addWidget(self.label_46)
        self.fft_plot_data = QtWidgets.QPushButton(self.frame_23)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fft_plot_data.setFont(font)
        self.fft_plot_data.setObjectName("fft_plot_data")
        self.verticalLayout_36.addWidget(self.fft_plot_data)
        self.label_30 = QtWidgets.QLabel(self.frame_23)
        self.label_30.setText("")
        self.label_30.setObjectName("label_30")
        self.verticalLayout_36.addWidget(self.label_30)
        self.fft_back = QtWidgets.QPushButton(self.frame_23)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fft_back.setFont(font)
        self.fft_back.setObjectName("fft_back")
        self.verticalLayout_36.addWidget(self.fft_back)
        self.label_37 = QtWidgets.QLabel(self.frame_23)
        self.label_37.setText("")
        self.label_37.setObjectName("label_37")
        self.verticalLayout_36.addWidget(self.label_37)
        self.verticalLayout_38.addWidget(self.frame_23)
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.verticalLayout_44 = QtWidgets.QVBoxLayout(self.page_4)
        self.verticalLayout_44.setObjectName("verticalLayout_44")
        self.frame_29 = QtWidgets.QFrame(self.page_4)
        self.frame_29.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_29.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_29.setObjectName("frame_29")
        self.verticalLayout_43 = QtWidgets.QVBoxLayout(self.frame_29)
        self.verticalLayout_43.setObjectName("verticalLayout_43")
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.frame_29)
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.verticalLayout_43.addWidget(self.textBrowser_8)
        self.verticalLayout_44.addWidget(self.frame_29)
        self.frame_25 = QtWidgets.QFrame(self.page_4)
        self.frame_25.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_25.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_25.setObjectName("frame_25")
        self.verticalLayout_39 = QtWidgets.QVBoxLayout(self.frame_25)
        self.verticalLayout_39.setObjectName("verticalLayout_39")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.frame_26 = QtWidgets.QFrame(self.frame_25)
        self.frame_26.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_26.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_26.setObjectName("frame_26")
        self.verticalLayout_40 = QtWidgets.QVBoxLayout(self.frame_26)
        self.verticalLayout_40.setObjectName("verticalLayout_40")
        self.label_74 = QtWidgets.QLabel(self.frame_26)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_74.setFont(font)
        self.label_74.setAlignment(QtCore.Qt.AlignCenter)
        self.label_74.setObjectName("label_74")
        self.verticalLayout_40.addWidget(self.label_74)
        self.label_27 = QtWidgets.QLabel(self.frame_26)
        self.label_27.setText("")
        self.label_27.setObjectName("label_27")
        self.verticalLayout_40.addWidget(self.label_27)
        self.label_77 = QtWidgets.QLabel(self.frame_26)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_77.setFont(font)
        self.label_77.setAlignment(QtCore.Qt.AlignCenter)
        self.label_77.setObjectName("label_77")
        self.verticalLayout_40.addWidget(self.label_77)
        self.label_38 = QtWidgets.QLabel(self.frame_26)
        self.label_38.setText("")
        self.label_38.setObjectName("label_38")
        self.verticalLayout_40.addWidget(self.label_38)
        self.label_76 = QtWidgets.QLabel(self.frame_26)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_76.setFont(font)
        self.label_76.setAlignment(QtCore.Qt.AlignCenter)
        self.label_76.setObjectName("label_76")
        self.verticalLayout_40.addWidget(self.label_76)
        self.horizontalLayout_12.addWidget(self.frame_26)
        self.frame_27 = QtWidgets.QFrame(self.frame_25)
        self.frame_27.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_27.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_27.setObjectName("frame_27")
        self.verticalLayout_41 = QtWidgets.QVBoxLayout(self.frame_27)
        self.verticalLayout_41.setObjectName("verticalLayout_41")
        self.horizontalLayout_62 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_62.setObjectName("horizontalLayout_62")
        self.iir_notch_fs_sli = QtWidgets.QSlider(self.frame_27)
        self.iir_notch_fs_sli.setMaximum(20000)
        self.iir_notch_fs_sli.setSingleStep(1000)
        self.iir_notch_fs_sli.setSliderPosition(0)
        self.iir_notch_fs_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_notch_fs_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_notch_fs_sli.setTickInterval(1000)
        self.iir_notch_fs_sli.setObjectName("iir_notch_fs_sli")
        self.horizontalLayout_62.addWidget(self.iir_notch_fs_sli)
        self.iir_notch_fs_spin = QtWidgets.QSpinBox(self.frame_27)
        self.iir_notch_fs_spin.setMinimumSize(QtCore.QSize(90, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_fs_spin.setFont(font)
        self.iir_notch_fs_spin.setMaximum(20000)
        self.iir_notch_fs_spin.setSingleStep(1000)
        self.iir_notch_fs_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_notch_fs_spin.setDisplayIntegerBase(10)
        self.iir_notch_fs_spin.setObjectName("iir_notch_fs_spin")
        self.horizontalLayout_62.addWidget(self.iir_notch_fs_spin)
        self.verticalLayout_41.addLayout(self.horizontalLayout_62)
        self.horizontalLayout_65 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_65.setObjectName("horizontalLayout_65")
        self.iir_notch_fc_sli = QtWidgets.QSlider(self.frame_27)
        self.iir_notch_fc_sli.setMaximum(10000)
        self.iir_notch_fc_sli.setSingleStep(100)
        self.iir_notch_fc_sli.setSliderPosition(0)
        self.iir_notch_fc_sli.setOrientation(QtCore.Qt.Horizontal)
        self.iir_notch_fc_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.iir_notch_fc_sli.setTickInterval(500)
        self.iir_notch_fc_sli.setObjectName("iir_notch_fc_sli")
        self.horizontalLayout_65.addWidget(self.iir_notch_fc_sli)
        self.iir_notch_fc_spin = QtWidgets.QSpinBox(self.frame_27)
        self.iir_notch_fc_spin.setMinimumSize(QtCore.QSize(90, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_fc_spin.setFont(font)
        self.iir_notch_fc_spin.setMaximum(10000)
        self.iir_notch_fc_spin.setSingleStep(10)
        self.iir_notch_fc_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_notch_fc_spin.setDisplayIntegerBase(10)
        self.iir_notch_fc_spin.setObjectName("iir_notch_fc_spin")
        self.horizontalLayout_65.addWidget(self.iir_notch_fc_spin)
        self.verticalLayout_41.addLayout(self.horizontalLayout_65)
        self.horizontalLayout_64 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_64.setObjectName("horizontalLayout_64")
        self.label_16 = QtWidgets.QLabel(self.frame_27)
        self.label_16.setText("")
        self.label_16.setObjectName("label_16")
        self.horizontalLayout_64.addWidget(self.label_16)
        self.iir_notch_a_spin = QtWidgets.QDoubleSpinBox(self.frame_27)
        self.iir_notch_a_spin.setMinimumSize(QtCore.QSize(90, 0))
        self.iir_notch_a_spin.setMaximumSize(QtCore.QSize(90, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_a_spin.setFont(font)
        self.iir_notch_a_spin.setDecimals(3)
        self.iir_notch_a_spin.setMinimum(0.8)
        self.iir_notch_a_spin.setMaximum(1.8)
        self.iir_notch_a_spin.setSingleStep(0.001)
        self.iir_notch_a_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.iir_notch_a_spin.setProperty("value", 0.8)
        self.iir_notch_a_spin.setObjectName("iir_notch_a_spin")
        self.horizontalLayout_64.addWidget(self.iir_notch_a_spin)
        self.verticalLayout_41.addLayout(self.horizontalLayout_64)
        self.horizontalLayout_12.addWidget(self.frame_27)
        self.verticalLayout_39.addLayout(self.horizontalLayout_12)
        self.verticalLayout_44.addWidget(self.frame_25)
        self.frame_28 = QtWidgets.QFrame(self.page_4)
        self.frame_28.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_28.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_28.setObjectName("frame_28")
        self.verticalLayout_42 = QtWidgets.QVBoxLayout(self.frame_28)
        self.verticalLayout_42.setObjectName("verticalLayout_42")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.iir_notch_set_param = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_set_param.setFont(font)
        self.iir_notch_set_param.setObjectName("iir_notch_set_param")
        self.horizontalLayout_16.addWidget(self.iir_notch_set_param)
        self.iir_notch_filter_coeff = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_filter_coeff.setFont(font)
        self.iir_notch_filter_coeff.setObjectName("iir_notch_filter_coeff")
        self.horizontalLayout_16.addWidget(self.iir_notch_filter_coeff)
        self.verticalLayout_42.addLayout(self.horizontalLayout_16)
        self.label_29 = QtWidgets.QLabel(self.frame_28)
        self.label_29.setText("")
        self.label_29.setObjectName("label_29")
        self.verticalLayout_42.addWidget(self.label_29)
        self.horizontalLayout_66 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_66.setObjectName("horizontalLayout_66")
        self.iir_notch_send_coeff = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_send_coeff.setFont(font)
        self.iir_notch_send_coeff.setObjectName("iir_notch_send_coeff")
        self.horizontalLayout_66.addWidget(self.iir_notch_send_coeff)
        self.iir_notch_filter_mag = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_filter_mag.setFont(font)
        self.iir_notch_filter_mag.setObjectName("iir_notch_filter_mag")
        self.horizontalLayout_66.addWidget(self.iir_notch_filter_mag)
        self.verticalLayout_42.addLayout(self.horizontalLayout_66)
        self.label_44 = QtWidgets.QLabel(self.frame_28)
        self.label_44.setText("")
        self.label_44.setObjectName("label_44")
        self.verticalLayout_42.addWidget(self.label_44)
        self.iir_notch_inout_time = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_inout_time.setFont(font)
        self.iir_notch_inout_time.setObjectName("iir_notch_inout_time")
        self.verticalLayout_42.addWidget(self.iir_notch_inout_time)
        self.label_41 = QtWidgets.QLabel(self.frame_28)
        self.label_41.setText("")
        self.label_41.setObjectName("label_41")
        self.verticalLayout_42.addWidget(self.label_41)
        self.iir_notch_inout_fft = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_inout_fft.setFont(font)
        self.iir_notch_inout_fft.setObjectName("iir_notch_inout_fft")
        self.verticalLayout_42.addWidget(self.iir_notch_inout_fft)
        self.label_42 = QtWidgets.QLabel(self.frame_28)
        self.label_42.setText("")
        self.label_42.setObjectName("label_42")
        self.verticalLayout_42.addWidget(self.label_42)
        self.iir_notch_back = QtWidgets.QPushButton(self.frame_28)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.iir_notch_back.setFont(font)
        self.iir_notch_back.setObjectName("iir_notch_back")
        self.verticalLayout_42.addWidget(self.iir_notch_back)
        self.label_43 = QtWidgets.QLabel(self.frame_28)
        self.label_43.setText("")
        self.label_43.setObjectName("label_43")
        self.verticalLayout_42.addWidget(self.label_43)
        self.verticalLayout_44.addWidget(self.frame_28)
        self.stackedWidget.addWidget(self.page_4)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.frame_9 = QtWidgets.QFrame(self.page_2)
        self.frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.frame_9)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.frame_9)
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.verticalLayout_17.addWidget(self.textBrowser_4)
        self.verticalLayout_19.addWidget(self.frame_9)
        self.verticalLayout_18 = QtWidgets.QVBoxLayout()
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_14 = QtWidgets.QLabel(self.page_2)
        self.label_14.setText("")
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_4.addWidget(self.label_14)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.goertz_3 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_3.sizePolicy().hasHeightForWidth())
        self.goertz_3.setSizePolicy(sizePolicy)
        self.goertz_3.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_3.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_3.setFont(font)
        self.goertz_3.setObjectName("goertz_3")
        self.gridLayout.addWidget(self.goertz_3, 2, 0, 1, 1)
        self.goertz_6 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_6.sizePolicy().hasHeightForWidth())
        self.goertz_6.setSizePolicy(sizePolicy)
        self.goertz_6.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_6.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_6.setFont(font)
        self.goertz_6.setObjectName("goertz_6")
        self.gridLayout.addWidget(self.goertz_6, 1, 1, 1, 1)
        self.goertz_16 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_16.sizePolicy().hasHeightForWidth())
        self.goertz_16.setSizePolicy(sizePolicy)
        self.goertz_16.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_16.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_16.setFont(font)
        self.goertz_16.setObjectName("goertz_16")
        self.gridLayout.addWidget(self.goertz_16, 3, 3, 1, 1)
        self.goertz_5 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_5.sizePolicy().hasHeightForWidth())
        self.goertz_5.setSizePolicy(sizePolicy)
        self.goertz_5.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_5.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_5.setFont(font)
        self.goertz_5.setObjectName("goertz_5")
        self.gridLayout.addWidget(self.goertz_5, 0, 1, 1, 1)
        self.goertz_11 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_11.sizePolicy().hasHeightForWidth())
        self.goertz_11.setSizePolicy(sizePolicy)
        self.goertz_11.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_11.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_11.setFont(font)
        self.goertz_11.setObjectName("goertz_11")
        self.gridLayout.addWidget(self.goertz_11, 2, 2, 1, 1)
        self.goertz_1 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_1.sizePolicy().hasHeightForWidth())
        self.goertz_1.setSizePolicy(sizePolicy)
        self.goertz_1.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_1.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_1.setFont(font)
        self.goertz_1.setObjectName("goertz_1")
        self.gridLayout.addWidget(self.goertz_1, 0, 0, 1, 1)
        self.goertz_9 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_9.sizePolicy().hasHeightForWidth())
        self.goertz_9.setSizePolicy(sizePolicy)
        self.goertz_9.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_9.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_9.setFont(font)
        self.goertz_9.setObjectName("goertz_9")
        self.gridLayout.addWidget(self.goertz_9, 0, 2, 1, 1)
        self.goertz_8 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_8.sizePolicy().hasHeightForWidth())
        self.goertz_8.setSizePolicy(sizePolicy)
        self.goertz_8.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_8.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_8.setFont(font)
        self.goertz_8.setObjectName("goertz_8")
        self.gridLayout.addWidget(self.goertz_8, 3, 1, 1, 1)
        self.goertz_10 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_10.sizePolicy().hasHeightForWidth())
        self.goertz_10.setSizePolicy(sizePolicy)
        self.goertz_10.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_10.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_10.setFont(font)
        self.goertz_10.setObjectName("goertz_10")
        self.gridLayout.addWidget(self.goertz_10, 1, 2, 1, 1)
        self.goertz_14 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_14.sizePolicy().hasHeightForWidth())
        self.goertz_14.setSizePolicy(sizePolicy)
        self.goertz_14.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_14.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_14.setFont(font)
        self.goertz_14.setObjectName("goertz_14")
        self.gridLayout.addWidget(self.goertz_14, 1, 3, 1, 1)
        self.goertz_13 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_13.sizePolicy().hasHeightForWidth())
        self.goertz_13.setSizePolicy(sizePolicy)
        self.goertz_13.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_13.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_13.setFont(font)
        self.goertz_13.setObjectName("goertz_13")
        self.gridLayout.addWidget(self.goertz_13, 0, 3, 1, 1)
        self.goertz_2 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_2.sizePolicy().hasHeightForWidth())
        self.goertz_2.setSizePolicy(sizePolicy)
        self.goertz_2.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_2.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_2.setFont(font)
        self.goertz_2.setObjectName("goertz_2")
        self.gridLayout.addWidget(self.goertz_2, 1, 0, 1, 1)
        self.goertz_15 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_15.sizePolicy().hasHeightForWidth())
        self.goertz_15.setSizePolicy(sizePolicy)
        self.goertz_15.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_15.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_15.setFont(font)
        self.goertz_15.setObjectName("goertz_15")
        self.gridLayout.addWidget(self.goertz_15, 2, 3, 1, 1)
        self.goertz_12 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_12.sizePolicy().hasHeightForWidth())
        self.goertz_12.setSizePolicy(sizePolicy)
        self.goertz_12.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_12.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_12.setFont(font)
        self.goertz_12.setObjectName("goertz_12")
        self.gridLayout.addWidget(self.goertz_12, 3, 2, 1, 1)
        self.goertz_7 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_7.sizePolicy().hasHeightForWidth())
        self.goertz_7.setSizePolicy(sizePolicy)
        self.goertz_7.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_7.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_7.setFont(font)
        self.goertz_7.setObjectName("goertz_7")
        self.gridLayout.addWidget(self.goertz_7, 2, 1, 1, 1)
        self.goertz_4 = QtWidgets.QPushButton(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goertz_4.sizePolicy().hasHeightForWidth())
        self.goertz_4.setSizePolicy(sizePolicy)
        self.goertz_4.setMinimumSize(QtCore.QSize(120, 120))
        self.goertz_4.setMaximumSize(QtCore.QSize(120, 120))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_4.setFont(font)
        self.goertz_4.setObjectName("goertz_4")
        self.gridLayout.addWidget(self.goertz_4, 3, 0, 1, 1)
        self.horizontalLayout_4.addLayout(self.gridLayout)
        self.label_15 = QtWidgets.QLabel(self.page_2)
        self.label_15.setText("")
        self.label_15.setObjectName("label_15")
        self.horizontalLayout_4.addWidget(self.label_15)
        self.verticalLayout_18.addLayout(self.horizontalLayout_4)
        self.goertz_start = QtWidgets.QPushButton(self.page_2)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.goertz_start.setFont(font)
        self.goertz_start.setObjectName("goertz_start")
        self.verticalLayout_18.addWidget(self.goertz_start)
        self.dtmf_back = QtWidgets.QPushButton(self.page_2)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.dtmf_back.setFont(font)
        self.dtmf_back.setObjectName("dtmf_back")
        self.verticalLayout_18.addWidget(self.dtmf_back)
        self.verticalLayout_19.addLayout(self.verticalLayout_18)
        self.stackedWidget.addWidget(self.page_2)
        self.page_py_sig_gen = QtWidgets.QWidget()
        self.page_py_sig_gen.setObjectName("page_py_sig_gen")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.page_py_sig_gen)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frame_3 = QtWidgets.QFrame(self.page_py_sig_gen)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.frame_3)
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.verticalLayout_10.addWidget(self.textBrowser_3)
        self.label_5 = QtWidgets.QLabel(self.frame_3)
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.verticalLayout_10.addWidget(self.label_5)
        self.label_4 = QtWidgets.QLabel(self.frame_3)
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.verticalLayout_10.addWidget(self.label_4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.samplingSpeed = QtWidgets.QLabel(self.frame_3)
        self.samplingSpeed.setMinimumSize(QtCore.QSize(170, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.samplingSpeed.setFont(font)
        self.samplingSpeed.setAlignment(QtCore.Qt.AlignCenter)
        self.samplingSpeed.setObjectName("samplingSpeed")
        self.horizontalLayout_3.addWidget(self.samplingSpeed)
        self.sig_py_fs_sli = QtWidgets.QSlider(self.frame_3)
        self.sig_py_fs_sli.setMaximum(100000)
        self.sig_py_fs_sli.setSingleStep(10000)
        self.sig_py_fs_sli.setSliderPosition(0)
        self.sig_py_fs_sli.setOrientation(QtCore.Qt.Horizontal)
        self.sig_py_fs_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_py_fs_sli.setTickInterval(10000)
        self.sig_py_fs_sli.setObjectName("sig_py_fs_sli")
        self.horizontalLayout_3.addWidget(self.sig_py_fs_sli)
        self.sig_py_fs_spin = QtWidgets.QSpinBox(self.frame_3)
        self.sig_py_fs_spin.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_fs_spin.setFont(font)
        self.sig_py_fs_spin.setMaximum(100000)
        self.sig_py_fs_spin.setSingleStep(10000)
        self.sig_py_fs_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.sig_py_fs_spin.setDisplayIntegerBase(10)
        self.sig_py_fs_spin.setObjectName("sig_py_fs_spin")
        self.horizontalLayout_3.addWidget(self.sig_py_fs_spin)
        self.verticalLayout_10.addLayout(self.horizontalLayout_3)
        self.label_2 = QtWidgets.QLabel(self.frame_3)
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.verticalLayout_10.addWidget(self.label_2)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.samplingSpeed_4 = QtWidgets.QLabel(self.frame_3)
        self.samplingSpeed_4.setMinimumSize(QtCore.QSize(170, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.samplingSpeed_4.setFont(font)
        self.samplingSpeed_4.setAlignment(QtCore.Qt.AlignCenter)
        self.samplingSpeed_4.setObjectName("samplingSpeed_4")
        self.horizontalLayout_18.addWidget(self.samplingSpeed_4)
        self.sig_py_time_sli = QtWidgets.QSlider(self.frame_3)
        self.sig_py_time_sli.setMaximum(20)
        self.sig_py_time_sli.setSingleStep(1)
        self.sig_py_time_sli.setSliderPosition(0)
        self.sig_py_time_sli.setOrientation(QtCore.Qt.Horizontal)
        self.sig_py_time_sli.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_py_time_sli.setTickInterval(1)
        self.sig_py_time_sli.setObjectName("sig_py_time_sli")
        self.horizontalLayout_18.addWidget(self.sig_py_time_sli)
        self.sig_py_time_spin = QtWidgets.QSpinBox(self.frame_3)
        self.sig_py_time_spin.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_time_spin.setFont(font)
        self.sig_py_time_spin.setMaximum(100000)
        self.sig_py_time_spin.setSingleStep(10000)
        self.sig_py_time_spin.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.sig_py_time_spin.setDisplayIntegerBase(10)
        self.sig_py_time_spin.setObjectName("sig_py_time_spin")
        self.horizontalLayout_18.addWidget(self.sig_py_time_spin)
        self.verticalLayout_10.addLayout(self.horizontalLayout_18)
        self.verticalLayout_4.addWidget(self.frame_3)
        self.frame_5 = QtWidgets.QFrame(self.page_py_sig_gen)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.sig_py_type_1 = QtWidgets.QComboBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_type_1.setFont(font)
        self.sig_py_type_1.setObjectName("sig_py_type_1")
        self.sig_py_type_1.addItem("")
        self.sig_py_type_1.addItem("")
        self.sig_py_type_1.addItem("")
        self.sig_py_type_1.addItem("")
        self.sig_py_type_1.addItem("")
        self.verticalLayout_5.addWidget(self.sig_py_type_1)
        self.sig_py_type_2 = QtWidgets.QComboBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_type_2.setFont(font)
        self.sig_py_type_2.setObjectName("sig_py_type_2")
        self.sig_py_type_2.addItem("")
        self.sig_py_type_2.addItem("")
        self.sig_py_type_2.addItem("")
        self.sig_py_type_2.addItem("")
        self.sig_py_type_2.addItem("")
        self.verticalLayout_5.addWidget(self.sig_py_type_2)
        self.sig_py_type_3 = QtWidgets.QComboBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_type_3.setFont(font)
        self.sig_py_type_3.setObjectName("sig_py_type_3")
        self.sig_py_type_3.addItem("")
        self.sig_py_type_3.addItem("")
        self.sig_py_type_3.addItem("")
        self.sig_py_type_3.addItem("")
        self.sig_py_type_3.addItem("")
        self.verticalLayout_5.addWidget(self.sig_py_type_3)
        self.sig_py_type_4 = QtWidgets.QComboBox(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_type_4.setFont(font)
        self.sig_py_type_4.setObjectName("sig_py_type_4")
        self.sig_py_type_4.addItem("")
        self.sig_py_type_4.addItem("")
        self.sig_py_type_4.addItem("")
        self.sig_py_type_4.addItem("")
        self.sig_py_type_4.addItem("")
        self.verticalLayout_5.addWidget(self.sig_py_type_4)
        self.horizontalLayout_2.addLayout(self.verticalLayout_5)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.sig_py_fs_sli_1 = QtWidgets.QSlider(self.frame_5)
        self.sig_py_fs_sli_1.setMaximum(10000)
        self.sig_py_fs_sli_1.setSingleStep(100)
        self.sig_py_fs_sli_1.setSliderPosition(0)
        self.sig_py_fs_sli_1.setOrientation(QtCore.Qt.Horizontal)
        self.sig_py_fs_sli_1.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_py_fs_sli_1.setTickInterval(500)
        self.sig_py_fs_sli_1.setObjectName("sig_py_fs_sli_1")
        self.verticalLayout_6.addWidget(self.sig_py_fs_sli_1)
        self.sig_py_fs_sli_2 = QtWidgets.QSlider(self.frame_5)
        self.sig_py_fs_sli_2.setMaximum(10000)
        self.sig_py_fs_sli_2.setSingleStep(100)
        self.sig_py_fs_sli_2.setSliderPosition(0)
        self.sig_py_fs_sli_2.setOrientation(QtCore.Qt.Horizontal)
        self.sig_py_fs_sli_2.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_py_fs_sli_2.setTickInterval(500)
        self.sig_py_fs_sli_2.setObjectName("sig_py_fs_sli_2")
        self.verticalLayout_6.addWidget(self.sig_py_fs_sli_2)
        self.sig_py_fs_sli_3 = QtWidgets.QSlider(self.frame_5)
        self.sig_py_fs_sli_3.setMaximum(10000)
        self.sig_py_fs_sli_3.setSingleStep(100)
        self.sig_py_fs_sli_3.setSliderPosition(0)
        self.sig_py_fs_sli_3.setOrientation(QtCore.Qt.Horizontal)
        self.sig_py_fs_sli_3.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_py_fs_sli_3.setTickInterval(500)
        self.sig_py_fs_sli_3.setObjectName("sig_py_fs_sli_3")
        self.verticalLayout_6.addWidget(self.sig_py_fs_sli_3)
        self.sig_py_fs_sli_4 = QtWidgets.QSlider(self.frame_5)
        self.sig_py_fs_sli_4.setMaximum(10000)
        self.sig_py_fs_sli_4.setSingleStep(100)
        self.sig_py_fs_sli_4.setSliderPosition(0)
        self.sig_py_fs_sli_4.setOrientation(QtCore.Qt.Horizontal)
        self.sig_py_fs_sli_4.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sig_py_fs_sli_4.setTickInterval(500)
        self.sig_py_fs_sli_4.setObjectName("sig_py_fs_sli_4")
        self.verticalLayout_6.addWidget(self.sig_py_fs_sli_4)
        self.horizontalLayout_2.addLayout(self.verticalLayout_6)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.sig_py_fs_spin_1 = QtWidgets.QSpinBox(self.frame_5)
        self.sig_py_fs_spin_1.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_fs_spin_1.setFont(font)
        self.sig_py_fs_spin_1.setMaximum(10000)
        self.sig_py_fs_spin_1.setSingleStep(10)
        self.sig_py_fs_spin_1.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.sig_py_fs_spin_1.setDisplayIntegerBase(10)
        self.sig_py_fs_spin_1.setObjectName("sig_py_fs_spin_1")
        self.verticalLayout_8.addWidget(self.sig_py_fs_spin_1)
        self.sig_py_fs_spin_2 = QtWidgets.QSpinBox(self.frame_5)
        self.sig_py_fs_spin_2.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_fs_spin_2.setFont(font)
        self.sig_py_fs_spin_2.setMaximum(10000)
        self.sig_py_fs_spin_2.setObjectName("sig_py_fs_spin_2")
        self.verticalLayout_8.addWidget(self.sig_py_fs_spin_2)
        self.sig_py_fs_spin_3 = QtWidgets.QSpinBox(self.frame_5)
        self.sig_py_fs_spin_3.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_fs_spin_3.setFont(font)
        self.sig_py_fs_spin_3.setMinimum(0)
        self.sig_py_fs_spin_3.setMaximum(100000)
        self.sig_py_fs_spin_3.setObjectName("sig_py_fs_spin_3")
        self.verticalLayout_8.addWidget(self.sig_py_fs_spin_3)
        self.sig_py_fs_spin_4 = QtWidgets.QSpinBox(self.frame_5)
        self.sig_py_fs_spin_4.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_fs_spin_4.setFont(font)
        self.sig_py_fs_spin_4.setMaximum(10000)
        self.sig_py_fs_spin_4.setObjectName("sig_py_fs_spin_4")
        self.verticalLayout_8.addWidget(self.sig_py_fs_spin_4)
        self.horizontalLayout_2.addLayout(self.verticalLayout_8)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.sig_py_en_1 = QtWidgets.QRadioButton(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_en_1.setFont(font)
        self.sig_py_en_1.setAutoExclusive(False)
        self.sig_py_en_1.setObjectName("sig_py_en_1")
        self.verticalLayout_7.addWidget(self.sig_py_en_1)
        self.sig_py_en_2 = QtWidgets.QRadioButton(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_en_2.setFont(font)
        self.sig_py_en_2.setAutoExclusive(False)
        self.sig_py_en_2.setObjectName("sig_py_en_2")
        self.verticalLayout_7.addWidget(self.sig_py_en_2)
        self.sig_py_en_3 = QtWidgets.QRadioButton(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_en_3.setFont(font)
        self.sig_py_en_3.setAutoExclusive(False)
        self.sig_py_en_3.setObjectName("sig_py_en_3")
        self.verticalLayout_7.addWidget(self.sig_py_en_3)
        self.sig_py_en_4 = QtWidgets.QRadioButton(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_en_4.setFont(font)
        self.sig_py_en_4.setCheckable(True)
        self.sig_py_en_4.setAutoExclusive(False)
        self.sig_py_en_4.setObjectName("sig_py_en_4")
        self.verticalLayout_7.addWidget(self.sig_py_en_4)
        self.horizontalLayout_2.addLayout(self.verticalLayout_7)
        self.verticalLayout_4.addWidget(self.frame_5)
        self.label_3 = QtWidgets.QLabel(self.page_py_sig_gen)
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.verticalLayout_4.addWidget(self.label_3)
        self.frame_4 = QtWidgets.QFrame(self.page_py_sig_gen)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout()
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.sig_py_plot_fft = QtWidgets.QPushButton(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_plot_fft.setFont(font)
        self.sig_py_plot_fft.setObjectName("sig_py_plot_fft")
        self.verticalLayout_15.addWidget(self.sig_py_plot_fft)
        self.sig_py_set_out = QtWidgets.QPushButton(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_set_out.setFont(font)
        self.sig_py_set_out.setObjectName("sig_py_set_out")
        self.verticalLayout_15.addWidget(self.sig_py_set_out)
        self.sig_py_stop_out = QtWidgets.QPushButton(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_py_stop_out.setFont(font)
        self.sig_py_stop_out.setObjectName("sig_py_stop_out")
        self.verticalLayout_15.addWidget(self.sig_py_stop_out)
        self.sig_gen_py_back = QtWidgets.QPushButton(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sig_gen_py_back.setFont(font)
        self.sig_gen_py_back.setObjectName("sig_gen_py_back")
        self.verticalLayout_15.addWidget(self.sig_gen_py_back)
        self.verticalLayout_9.addLayout(self.verticalLayout_15)
        self.verticalLayout_4.addWidget(self.frame_4)
        self.stackedWidget.addWidget(self.page_py_sig_gen)
        self.verticalLayout_2.addWidget(self.stackedWidget)
        self.verticalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; font-weight:600; color:#0000ff;\">Digital Signal</span></p>\n"
"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; font-weight:600; color:#0000ff;\">Processing</span></p>\n"
"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; font-weight:600; color:#0000ff;\">Application</span></p></body></html>"))
        self.connect_con.setText(_translate("MainWindow", "Connect To Controller"))
        self.sig_gen_setup.setText(_translate("MainWindow", "Signal Generator Through Controller"))
        self.fir_filter_setup.setText(_translate("MainWindow", "FIR Filter Setup"))
        self.iir_filter_setup.setText(_translate("MainWindow", "IIR Filter Setup"))
        self.conv_setup.setText(_translate("MainWindow", "Convolution Algorithm"))
        self.fft_setup.setText(_translate("MainWindow", "Fast Fourier Transform Algorithm"))
        self.iir_notch_setup.setText(_translate("MainWindow", "IIR Notch Filter"))
        self.dtmf_setup.setText(_translate("MainWindow", "DTMF Generation and Decoding"))
        self.sig_gen_py_setup.setText(_translate("MainWindow", "Signal Generator Through Python"))
        self.close_connect.setText(_translate("MainWindow", "Close Connection"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Signal Generation </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Through Controller</span></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "Type Of Signal"))
        self.label_7.setText(_translate("MainWindow", "Frequency of Signal "))
        self.sig_gen_type.setItemText(0, _translate("MainWindow", "Sine Signal"))
        self.sig_gen_type.setItemText(1, _translate("MainWindow", "Square Signal"))
        self.sig_gen_type.setItemText(2, _translate("MainWindow", "Triangular Signal"))
        self.sig_gen_type.setItemText(3, _translate("MainWindow", "Sawtooth Signal"))
        self.sig_gen_type.setItemText(4, _translate("MainWindow", "Random Signal"))
        self.sig_gen_set.setText(_translate("MainWindow", "Set Output"))
        self.sig_gen_plot.setText(_translate("MainWindow", "Plot Output"))
        self.sig_gen_con_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">FIR Filter Parameters</span></p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "Filter Response Type"))
        self.label_13.setText(_translate("MainWindow", "Sampling Frequency"))
        self.label_31.setText(_translate("MainWindow", "Fpb0(Lowpass & Highpass)"))
        self.label_32.setText(_translate("MainWindow", "Fsb0(Lowpass & Highpass)"))
        self.label_33.setText(_translate("MainWindow", "Fpb1(Bandstop & Bandstop)"))
        self.label_34.setText(_translate("MainWindow", "Fsb1(Bandstop & Bandstop)"))
        self.label_35.setText(_translate("MainWindow", "Fpb2(Bandstop & Bandstop)"))
        self.label_36.setText(_translate("MainWindow", "Fsb2(Bandstop & Bandstop)"))
        self.label_40.setText(_translate("MainWindow", "Ap"))
        self.label_39.setText(_translate("MainWindow", "As"))
        self.fir_set_param.setText(_translate("MainWindow", "Set Parameters"))
        self.fir_filter_type.setItemText(0, _translate("MainWindow", "Low Pass Filter"))
        self.fir_filter_type.setItemText(1, _translate("MainWindow", "High Pass Filter"))
        self.fir_filter_type.setItemText(2, _translate("MainWindow", "Band Pass Filter"))
        self.fir_filter_type.setItemText(3, _translate("MainWindow", "Band Stop Filter"))
        self.fir_filter_coeff.setText(_translate("MainWindow", "Show Filter Coeffcients   Order->"))
        self.fir_send_coeff.setText(_translate("MainWindow", "Send Filter Coeffcients"))
        self.fir_filter_mag.setText(_translate("MainWindow", "Magnitude Spectrum Of Filter"))
        self.fir_inout_time.setText(_translate("MainWindow", "Input/Output Signal In Time Domain"))
        self.fir_inout_fft.setText(_translate("MainWindow", "FFT of Input/Output Signal"))
        self.fir_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_12.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">IIR Filter Parameters</span></p></body></html>"))
        self.label_60.setText(_translate("MainWindow", "Filter Response Type"))
        self.label_78.setText(_translate("MainWindow", "IIR Filter Type"))
        self.label_61.setText(_translate("MainWindow", "Sampling Frequency"))
        self.label_62.setText(_translate("MainWindow", "Fpb0(Lowpass & Highpass)"))
        self.label_63.setText(_translate("MainWindow", "Fsb0(Lowpass & Highpass)"))
        self.label_64.setText(_translate("MainWindow", "Fpb1(Bandstop & Bandstop)"))
        self.label_65.setText(_translate("MainWindow", "Fsb1(Bandstop & Bandstop)"))
        self.label_66.setText(_translate("MainWindow", "Fpb2(Bandstop & Bandstop)"))
        self.label_67.setText(_translate("MainWindow", "Fsb2(Bandstop & Bandstop)"))
        self.label_68.setText(_translate("MainWindow", "Ap"))
        self.label_69.setText(_translate("MainWindow", "As"))
        self.iir_set_param.setText(_translate("MainWindow", "Set Parameters"))
        self.iir_filter_type.setItemText(0, _translate("MainWindow", "Low Pass Filter"))
        self.iir_filter_type.setItemText(1, _translate("MainWindow", "High Pass Filter"))
        self.iir_filter_type.setItemText(2, _translate("MainWindow", "Band Pass Filter"))
        self.iir_filter_type.setItemText(3, _translate("MainWindow", "Band Stop Filter"))
        self.iir_filter_func_type.setItemText(0, _translate("MainWindow", "Butterworth"))
        self.iir_filter_func_type.setItemText(1, _translate("MainWindow", "Chebyshev I"))
        self.iir_filter_func_type.setItemText(2, _translate("MainWindow", "Chebyshev II"))
        self.iir_filter_func_type.setItemText(3, _translate("MainWindow", "Cauer/elliptic"))
        self.iir_filter_coeff.setText(_translate("MainWindow", "Show Filter Coeffcients   Order->"))
        self.iir_send_coeff.setText(_translate("MainWindow", "Send Filter Coeffcients"))
        self.iir_filter_mag.setText(_translate("MainWindow", "Magnitude Spectrum Of Filter"))
        self.iir_inout_time.setText(_translate("MainWindow", "Input/Output Signal In Time Domain"))
        self.iir_inout_fft.setText(_translate("MainWindow", "FFT of Input/Output Signal"))
        self.iir_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Convolution</span></p></body></html>"))
        self.label_70.setText(_translate("MainWindow", "Sampling Frequency"))
        self.label_71.setText(_translate("MainWindow", "No Of Signals"))
        self.label_72.setText(_translate("MainWindow", "Size Of Input Array"))
        self.conv_num_sig.setItemText(0, _translate("MainWindow", "1"))
        self.conv_num_sig.setItemText(1, _translate("MainWindow", "2"))
        self.conv_send_params.setText(_translate("MainWindow", "Start Convolution"))
        self.conv_inout_time.setText(_translate("MainWindow", "Input/Output Signal In Time Domain"))
        self.conv_inout_fft.setText(_translate("MainWindow", "FFT of Input/Output Signal"))
        self.conv_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Fast Fourier Transform</span></p></body></html>"))
        self.label_73.setText(_translate("MainWindow", "Sampling Frequency"))
        self.label_75.setText(_translate("MainWindow", "Size Of Input Array"))
        self.fft_send_params.setText(_translate("MainWindow", "Start FFT"))
        self.fft_plot_data.setText(_translate("MainWindow", "Plot FFT Of Signal"))
        self.fft_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">IIR Notch Filter</span></p></body></html>"))
        self.label_74.setText(_translate("MainWindow", "Sampling Frequency"))
        self.label_77.setText(_translate("MainWindow", "Cutoff Frequency"))
        self.label_76.setText(_translate("MainWindow", "Value of a (Steepness)"))
        self.iir_notch_set_param.setText(_translate("MainWindow", "Set Parameters"))
        self.iir_notch_filter_coeff.setText(_translate("MainWindow", "Show Filter Coeffcients"))
        self.iir_notch_send_coeff.setText(_translate("MainWindow", "Send Filter Coeffcients"))
        self.iir_notch_filter_mag.setText(_translate("MainWindow", "Magnitude Spectrum Of Filter"))
        self.iir_notch_inout_time.setText(_translate("MainWindow", "Input/Output Signal In Time Domain"))
        self.iir_notch_inout_fft.setText(_translate("MainWindow", "FFT of Input/Output Signal"))
        self.iir_notch_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">DTMF Generation &amp; Decoding</span></p></body></html>"))
        self.goertz_3.setText(_translate("MainWindow", "7"))
        self.goertz_6.setText(_translate("MainWindow", "5"))
        self.goertz_16.setText(_translate("MainWindow", "D"))
        self.goertz_5.setText(_translate("MainWindow", "2"))
        self.goertz_11.setText(_translate("MainWindow", "9"))
        self.goertz_1.setText(_translate("MainWindow", "1"))
        self.goertz_9.setText(_translate("MainWindow", "3"))
        self.goertz_8.setText(_translate("MainWindow", "0"))
        self.goertz_10.setText(_translate("MainWindow", "6"))
        self.goertz_14.setText(_translate("MainWindow", "B"))
        self.goertz_13.setText(_translate("MainWindow", "A"))
        self.goertz_2.setText(_translate("MainWindow", "4"))
        self.goertz_15.setText(_translate("MainWindow", "C"))
        self.goertz_12.setText(_translate("MainWindow", "#"))
        self.goertz_7.setText(_translate("MainWindow", "8"))
        self.goertz_4.setText(_translate("MainWindow", "*"))
        self.goertz_start.setText(_translate("MainWindow", "Start Decoding"))
        self.dtmf_back.setText(_translate("MainWindow", "Back"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Signal Generation </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Through Python</span></p></body></html>"))
        self.samplingSpeed.setText(_translate("MainWindow", "Sampling Speed    "))
        self.samplingSpeed_4.setText(_translate("MainWindow", "Time Period    "))
        self.sig_py_type_1.setItemText(0, _translate("MainWindow", "Sine Signal"))
        self.sig_py_type_1.setItemText(1, _translate("MainWindow", "Square Signal"))
        self.sig_py_type_1.setItemText(2, _translate("MainWindow", "Triangular Signal"))
        self.sig_py_type_1.setItemText(3, _translate("MainWindow", "Sawtooth Signal"))
        self.sig_py_type_1.setItemText(4, _translate("MainWindow", "Random Signal"))
        self.sig_py_type_2.setItemText(0, _translate("MainWindow", "Sine Signal"))
        self.sig_py_type_2.setItemText(1, _translate("MainWindow", "Square Signal"))
        self.sig_py_type_2.setItemText(2, _translate("MainWindow", "Triangular Signal"))
        self.sig_py_type_2.setItemText(3, _translate("MainWindow", "Sawtooth Signal"))
        self.sig_py_type_2.setItemText(4, _translate("MainWindow", "Random Signal"))
        self.sig_py_type_3.setItemText(0, _translate("MainWindow", "Sine Signal"))
        self.sig_py_type_3.setItemText(1, _translate("MainWindow", "Square Signal"))
        self.sig_py_type_3.setItemText(2, _translate("MainWindow", "Triangular Signal"))
        self.sig_py_type_3.setItemText(3, _translate("MainWindow", "Sawtooth Signal"))
        self.sig_py_type_3.setItemText(4, _translate("MainWindow", "Random Signal"))
        self.sig_py_type_4.setItemText(0, _translate("MainWindow", "Sine Signal"))
        self.sig_py_type_4.setItemText(1, _translate("MainWindow", "Square Signal"))
        self.sig_py_type_4.setItemText(2, _translate("MainWindow", "Triangular Signal"))
        self.sig_py_type_4.setItemText(3, _translate("MainWindow", "Sawtooth Signal"))
        self.sig_py_type_4.setItemText(4, _translate("MainWindow", "Random Signal"))
        self.sig_py_en_1.setText(_translate("MainWindow", "Out1_En"))
        self.sig_py_en_2.setText(_translate("MainWindow", "Out2_En"))
        self.sig_py_en_3.setText(_translate("MainWindow", "Out3_En"))
        self.sig_py_en_4.setText(_translate("MainWindow", "Out4_En"))
        self.sig_py_plot_fft.setText(_translate("MainWindow", "Plot FFT Output"))
        self.sig_py_set_out.setText(_translate("MainWindow", "Set Output"))
        self.sig_py_stop_out.setText(_translate("MainWindow", "Stop Output"))
        self.sig_gen_py_back.setText(_translate("MainWindow", "Back"))


#start the application
app = QApplication(sys.argv)
MainWindow = QMainWindow()
ui = Ui_MainWindow()
ui.setupUi(MainWindow)
MainWindow.show()

#variables declarations
ser = serial.Serial(timeout=2) 
sig_gen_type_num = 0
fir_window = {
     1:[13,1.8,'boxcar'],
     2:[26,6.1,'bartlett'],
     3:[31,6.2,'hann'],
     4:[42,6.6,'hamming'],
     5:[59,11 ,'blackmanharris']
     }
iir_filter_func_list = [ 'butter','cheby1','cheby2','ellip']

goertz_freq=[[697,770,852,941],
             [1209,1336,1447,1633]]

front_buttons = [ ui.connect_con, ui.sig_gen_setup, ui.fir_filter_setup, ui.iir_filter_setup, ui.conv_setup,
                  ui.fft_setup, ui.iir_notch_setup, ui.dtmf_setup, ui.sig_gen_py_setup,ui.close_connect]
back_buttons = [ ui.sig_gen_con_back, ui.fir_back, ui.iir_back, ui.conv_back, ui.fft_back,
                 ui.iir_notch_back , ui.dtmf_back , ui.sig_gen_py_back]

sig_gen_buttons = [ui.sig_gen_type, ui.sig_gen_sli, ui.sig_gen_spin, ui.sig_gen_set, ui.sig_gen_plot]

fir_options = [ui.fir_filter_type, ui.fir_fs_sli, ui.fir_fs_spin, ui.fir_fpb0_sli, ui.fir_fpb0_spin,
               ui.fir_fsb0_sli, ui.fir_fsb0_spin, ui.fir_fpb1_sli, ui.fir_fpb1_spin,
               ui.fir_fsb1_sli, ui.fir_fsb1_spin, ui.fir_fpb2_sli, ui.fir_fpb2_spin,
               ui.fir_fsb2_sli, ui.fir_fsb2_spin, ui.fir_ap_sli, ui.fir_ap_spin,
               ui.fir_as_sli, ui.fir_as_spin] #18
fir_buttons = [ui.fir_set_param, ui.fir_filter_coeff, ui.fir_send_coeff, ui.fir_filter_mag,
               ui.fir_inout_time, ui.fir_inout_fft]

iir_options = [ui.iir_filter_type, ui.iir_fs_sli, ui.iir_fs_spin, ui.iir_fpb0_sli, ui.iir_fpb0_spin,
               ui.iir_fsb0_sli, ui.iir_fsb0_spin, ui.iir_fpb1_sli, ui.iir_fpb1_spin,
               ui.iir_fsb1_sli, ui.iir_fsb1_spin, ui.iir_fpb2_sli, ui.iir_fpb2_spin,
               ui.iir_fsb2_sli, ui.iir_fsb2_spin, ui.iir_ap_sli, ui.iir_ap_spin,
               ui.iir_as_sli, ui.iir_as_spin, ui.iir_filter_func_type] #19
iir_buttons = [ui.iir_set_param, ui.iir_filter_coeff, ui.iir_send_coeff, ui.iir_filter_mag,
               ui.iir_inout_time, ui.iir_inout_fft]

conv_options = [ui.conv_fs_sli, ui.conv_fs_spin, ui.conv_num_sig, ui.conv_size_sli,ui.conv_size_spin, 
                ui.conv_send_params, ui.conv_inout_time, ui.conv_inout_fft]

fft_options = [ui.fft_fs_sli, ui.fft_fs_spin, ui.fft_size_sli, ui.fft_size_spin, ui.fft_send_params, ui.fft_plot_data]

iir_notch_options = [ui.iir_notch_fs_sli, ui.iir_notch_fs_spin,ui.iir_notch_fc_sli, ui.iir_notch_fc_spin,
                     ui.iir_notch_a_spin, ui.iir_notch_set_param, ui.iir_notch_filter_coeff,
                     ui.iir_notch_send_coeff, ui.iir_notch_filter_mag, ui.iir_notch_inout_time, ui.iir_notch_inout_fft]

goertz_options = [ui.goertz_1,ui.goertz_2,ui.goertz_3,ui.goertz_4,ui.goertz_5,ui.goertz_6,ui.goertz_7,ui.goertz_8,ui.goertz_9,
                ui.goertz_10,ui.goertz_11,ui.goertz_12,ui.goertz_13,ui.goertz_14,ui.goertz_15,ui.goertz_16,ui.goertz_start]

sig_py_options = [ui.sig_py_fs_sli,ui.sig_py_fs_spin,ui.sig_py_time_sli,ui.sig_py_time_spin,
               ui.sig_py_type_1,   ui.sig_py_type_2,   ui.sig_py_type_3,   ui.sig_py_type_4,
               ui.sig_py_fs_sli_1, ui.sig_py_fs_sli_2, ui.sig_py_fs_sli_3, ui.sig_py_fs_sli_4,
               ui.sig_py_fs_spin_1,ui.sig_py_fs_spin_2,ui.sig_py_fs_spin_3,ui.sig_py_fs_spin_4,
               ui.sig_py_en_1,     ui.sig_py_en_2,     ui.sig_py_en_3,     ui.sig_py_en_4,
               ui.sig_py_plot_fft,ui.sig_py_set_out,ui.sig_py_stop_out]

#function defines

def init_settings():
     # func_connect_con()
     ui.stackedWidget.setCurrentIndex(0)
     func_fir_options(0,0)
     func_fir_options(0,1)
     func_iir_options(0,0)
     func_iir_options(0,1)
     func_iir_notch_options(0,0)
     func_sig_py_options(0,0)

def func_connect_con():
     ser.close()
     if(not ser.is_open):
          ports = (serial.tools.list_ports.comports())
          if(len(ports)==0):
               err_msg("Serial Connection Not Found")
          else:
               for p in ports:
                    p1 = str(p)
                    if "COM" in p1:
                         p2 = str(p[0])
                         com = p2
                         ser.baudrate = 115200
                         ser.port = com
                         ser.open()
                         print(p2)
                         time.sleep(1)
                         init_settings()
                         info_msg("Connected to Controller at: "+p2)
                         break
     else:
          try:
               ser.read()
          except serial.SerialException:
               ser.close()
          else:
             print("Serial port already in use")

def func_close_con():
     if(ser.is_open):
          ser.close()
          info_msg("Connection Disconnected")
     else:
          info_msg("No Connection Found")
       
def set_page(num):
     ui.stackedWidget.setCurrentIndex(num)

def send_params(type="FIR",fs=1000,n=1,b_coeff=0,a_coeff=0):
     try:
          if(ser.is_open==False):
               err_msg("No Device Connection")
          else:
               if(type=="FIR"):
                    ser.write(str.encode(str(type)+'\n'))
                    ser.write(str.encode(str(n)+'\n'))
                    ser.write(str.encode(str(fs)+'\n'))
                    for i in range(0,n):
                         ser.write(str.encode(str(b_coeff[i])+'\n'))

               elif(type=="IIR"):
                    ser.write(str.encode(str(type)+'\n'))
                    ser.write(str.encode(str(n)+'\n'))
                    ser.write(str.encode(str(fs)+'\n'))
                    for i in range(0,n):
                         ser.write(str.encode(str(b_coeff[i])+'\n'))
                         ser.write(str.encode(str(a_coeff[i])+'\n'))

               elif(type=="CONV"):
                    ser.write(str.encode(str(type)+'\n'))
                    ser.write(str.encode(str(n)+'\n'))
                    ser.write(str.encode(str(fs)+'\n'))
                    ser.write(str.encode(str(b_coeff)+'\n'))

               elif(type=="FFT"):
                    ser.write(str.encode(str(type)+'\n'))
                    ser.write(str.encode(str(n)+'\n'))         
                    ser.write(str.encode(str(fs)+'\n'))

               elif(type=="SIG_GEN"):
                    ser.write(str.encode(str(type)+'\n'))
                    ser.write(str.encode(str(n)+'\n'))         
                    ser.write(str.encode(str(fs)+'\n'))   
               
               info_msg("Data Sent")

     except:
          err_msg("Error in Sending Parameters.Try reconnecting.")      
                        
def filter_coeff_fft(type,b_arr,a_arr,fs): 
       global fig1, ax1, ax2, ax3

       if plt.fignum_exists(1)==True:
            plt.close()

       if plt.fignum_exists(1)==False:
            fig1, (ax1, ax2, ax3) = plt.subplots(3)
            if(type !="FIR"):
               ax1.stem(range(0,len(a_arr)),a_arr, markerfmt='bo', label='Den Coeff')
            ax1.stem(range(0,len(b_arr)),b_arr, markerfmt='ro', label='Num Coeff')
            ax1.legend()
            ax1.set_title("Filter Coefficients")
            ax1.set_ylabel("Amplitude")
            ax1.grid()
            size=2048
            w,h = signal.freqz(b_arr,a_arr,size)
            ax2.plot(w/math.pi*fs/2,abs(h))
            ax2.set_title("Filter Frequency Response")
            ax2.set_ylabel("Normalized Amplitude")
            ax2.grid()
            ax3.plot(w/math.pi,20*np.log10(abs(h)))
            ylim = min(20*np.log10(abs(h))) if (min(20*np.log10(abs(h))) > -100) else -100
            ax3.set_ylim([ylim,2])
            ax3.set_title("Filter Frequency Response(in dB)")
            ax3.set_ylabel("Attenuation")
            ax3.set_xlabel("Digital Frequency Range")
            ax3.grid()
            fig1.show()
            
def plot_filter_data(type,time,fs):
     global ani1,fig2,ax4,ax5

     def update(self):
          ser.write(str.encode(str(type)+'\n'))
          inp=[]
          outp=[]
          for i in range(0,512):
               data = float(ser.readline().decode())*1/4095
               if(i%2==0):
                    inp.append(data)
               else:
                    outp.append(data)
          ax4.clear()
          ax5.clear()
          if(time ==1):
               ax4.plot(inp)
               ax4.grid()
               ax4.set_ylabel("Amplitude")
               ax4.set_title("Input Signal")
               ax5.plot(outp) 
               ax5.set_ylabel("Amplitude")
               ax5.set_title("Output Signal")
               ax5.grid()

          else:
               fft_size=2048
               inp_abs = abs(np.array(fft(inp, fft_size)))
               outp_abs = abs(np.array(fft(outp, fft_size)))
               inp_abs = np.array(inp_abs[20:int(fft_size/2)])
               inp_abs = np.true_divide(inp_abs,max(inp_abs))
               outp_abs = np.array(outp_abs[20:int(fft_size/2)])
               outp_abs = np.true_divide(outp_abs,max(outp_abs))
               freq = np.linspace(0, 1, int(fft_size/2))
               ax4.plot(freq[20:int(fft_size/2)],inp_abs)  
               ax4.grid()
               ax4.set_ylabel("Normalized Amplitude")
               ax4.set_xlabel("Frequency Range")               
               ax4.set_title("FFT of Input Signal")
               ax5.plot(freq[20:int(fft_size/2)],outp_abs)
               ax5.grid()
               ax5.set_ylabel("Normalized Amplitude")               
               ax5.set_xlabel("Frequency Range")               
               ax5.set_title("FFT of Output Signal")

     if plt.fignum_exists(1)==False:
          # Figure is closed
          fig2, (ax4, ax5) = plt.subplots(2)
          ani1 = FuncAnimation(fig2,update,interval=100)
          #plt.tight_layout()
          fig2.show()
     return ani1    

def plot_con_fft_data(type,size,fs):
    global ani4,fig5,ax11

    freq = np.linspace(-1, 1, int(size))*fs/2

    def update(self):
          ser.write(str.encode(str(type)+'\n'))
          outp=[]
          for i in range(0,size):
               data = float(ser.readline().decode())
               outp.append(data)
          outp= np.array(fftshift(outp))
          outp = np.true_divide(outp,max(outp))
          ax11.clear()
          ax11.plot(freq,outp)
          ax11.set_ylabel("Normalized Amplitude")               
          ax11.set_xlabel("Frequency Range")               
          ax11.set_title("FFT of Output Signal")

    if plt.fignum_exists(1)==False:
        # Figure is closed
        fig5, (ax11) = plt.subplots(1)
        ani4 = FuncAnimation(fig5,update,interval=1000)
        #plt.tight_layout()
        fig5.show()
    return ani4

def plot_conv_data(type,size,time,fs):
     global  ani3,fig4,ax8,ax9,ax10 

     def update(self):
          ser.write(str.encode(str(type)+'\n'))
          inp1=[]
          inp2=[]
          outp=[]
          for i in range(0,size*2):
               data = float(ser.readline().decode())*1/4095
               if(i%2==0):
                    inp1.append(data)
               else:
                    inp2.append(data)   

          for i in range(0,size*2 -1):
               data = float(ser.readline().decode())*1/4095 
               outp.append(data) 
          ax8.clear()
          ax9.clear()
          ax10.clear()
          if(time==1):
               ax8.plot(inp1)
               ax8.grid()
               ax8.set_ylabel("Amplitude")
               ax8.set_title("Input 1")
               ax9.plot(inp2)
               ax9.grid()
               ax9.set_ylabel("Amplitude")
               ax9.set_title("Input 2")
               ax10.plot(outp)
               ax10.grid()
               ax10.set_ylabel("Amplitude")
               ax10.set_title("Output")

          else:
               fft_size = 2048
               inp1_abs = abs(np.array(fft(inp1, fft_size)))
               inp2_abs = abs(np.array(fft(inp2, fft_size)))
               outp_abs = abs(np.array(fft(outp, fft_size)))
               inp1_abs = np.array(inp1_abs[0:int(fft_size/2)])
               inp1_abs = np.true_divide(inp1_abs,max(inp1_abs))
               inp2_abs = np.array(inp2_abs[0:int(fft_size/2)])
               inp2_abs = np.true_divide(inp2_abs,max(inp2_abs))
               outp_abs = np.array(outp_abs[0:int(fft_size/2)])
               outp_abs = np.true_divide(outp_abs,max(outp_abs))
               freq = np.linspace(0, 1, int(fft_size/2))*fs/2
               ax8.plot(freq,inp1_abs)
               ax8.grid()
               ax8.set_ylabel("Normalized Amplitude")
               ax8.set_title("FFT of Input 1 Signal")
               ax9.plot(freq,inp2_abs)
               ax9.grid()
               ax9.set_ylabel("Normalized Amplitude")
               ax9.set_title("FFT of Input 2 Signal")
               ax10.plot(freq,outp_abs)
               ax10.grid()
               ax10.set_ylabel("Normalized Amplitude")
               ax10.set_title("FFT of Output Signal")
     if plt.fignum_exists(1)==False:
          # Figure is closed
          fig4, (ax8, ax9, ax10) = plt.subplots(3)
          ani3 = FuncAnimation(fig4,update,interval=1000)
          #plt.tight_layout()
          fig4.show()
     return ani3

def func_sig_gen_con(num):
     global sig_gen_type_num,sig_gen_fs,t,sig

     if(num == 1):
          sig_gen_fs = int(sig_gen_buttons[1].value()/100)*100
          sig_gen_buttons[2].setValue(sig_gen_fs)         
     elif(num == 2):
          sig_gen_fs = int(sig_gen_buttons[2].value()/100)*100
          sig_gen_buttons[1].setValue(sig_gen_fs)
          
     elif(num == 3):
          sig_gen_type_num = sig_gen_buttons[0].currentIndex()
          sig_gen_fs = sig_gen_buttons[2].value()   

          if (sig_gen_fs==0):
               err_msg('Signal Frequency Set to 0')
          else:
               send_params("SIG_GEN",sig_gen_fs,sig_gen_type_num)

     elif(num == 4):
          sig_gen_type_num = sig_gen_buttons[0].currentIndex()
          size = 100
          t = np.linspace(0,1,size+1)
          t = t[0:size]
          fig,(ax1)= plt.subplots(1)
          if(sig_gen_type_num==0):
               sig = np.sin(2*np.pi*2*t)
          elif(sig_gen_type_num==1):
               sig = signal.square(2 * np.pi * 2 * t)
          elif(sig_gen_type_num==2):
               sig = signal.sawtooth(2 * np.pi * 2 * t,0.5)
          elif(sig_gen_type_num==3):
               sig = signal.sawtooth(2 * np.pi * 2 * t,1)
          elif(sig_gen_type_num==4):
               sig = np.random.rand(1,size)
               sig = sig[0]
          ax1.step(t,sig)
          ax1.grid()
          ax1.set_title("Signal Generated")
          fig.show()

def func_fir_options(type_num,num):
     global fir_filter_type
     global fir_fs,fir_fpb0,fir_fsb0,fir_fpb1,fir_fsb1,fir_fpb2,fir_fsb2,fir_ap,fir_as
     global win,fir_fil_len,filter_coeff
     
     if (type_num ==0):

          if(num ==0):
               fir_filter_type = fir_options[0].currentIndex()
               if((fir_filter_type == 0)|(fir_filter_type == 1)):
                    for i in range(7,15):
                         fir_options[i].setEnabled(0)
                    for i in range(3,7):
                         fir_options[i].setEnabled(1)
               if((fir_filter_type == 2)|(fir_filter_type == 3)):
                    for i in range(3,7):
                         fir_options[i].setEnabled(0)
                    for i in range(7,15):
                         fir_options[i].setEnabled(1)

          elif(num==1):
               fir_fs = int(fir_options[1].value()/1000)*1000
               fir_options[2].setValue(fir_fs)
               for i in range(3,15,2):
                    fir_options[i].setMaximum(int(fir_fs/2))
                    fir_options[i].setSingleStep(int(fir_fs/(2*10)))
                    fir_options[i].setTickInterval(int(fir_fs/(2*10)))
               for i in range(4,16,2):
                    fir_options[i].setMaximum(int(fir_fs/2))
                    fir_options[i].setSingleStep(int(fir_fs/(2*100)))

          elif(num==2):
               fir_fs = int(fir_options[2].value()/1000)*1000
               fir_options[1].setValue(fir_fs)
               for i in range(3,15,2):
                    fir_options[i].setMaximum(int(fir_fs/2))
                    fir_options[i].setSingleStep(int(fir_fs/(2*10)))
                    fir_options[i].setTickInterval(int(fir_fs/(2*10)))
               for i in range(4,16,2):
                    fir_options[i].setMaximum(int(fir_fs/2))
                    fir_options[i].setSingleStep(int(fir_fs/(2*100)))
               
          elif(num==3):
               fir_fpb0 = fir_options[3].value()
               fir_options[4].setValue(fir_fpb0)
          elif(num==4):
               fir_fpb0 = fir_options[4].value()
               fir_options[3].setValue(fir_fpb0)

          elif(num==5):
               fir_fsb0 = fir_options[5].value()
               fir_options[6].setValue(fir_fsb0)    
          elif(num==6):
               fir_fsb0 = fir_options[6].value()
               fir_options[5].setValue(fir_fsb0)

          elif(num==7):
               fir_fpb1 = fir_options[7].value()
               fir_options[8].setValue(fir_fpb1)    
          elif(num==8):
               fir_fpb1 = fir_options[8].value()
               fir_options[7].setValue(fir_fpb1)

          elif(num==9):
               fir_fsb1 = fir_options[9].value()
               fir_options[10].setValue(fir_fsb1)    
          elif(num==10):
               fir_fsb1 = fir_options[10].value()
               fir_options[9].setValue(fir_fsb1)

          elif(num==11):
               fir_fpb2 = fir_options[11].value()
               fir_options[12].setValue(fir_fpb2)    
          elif(num==12):
               fir_fpb2 = fir_options[12].value()
               fir_options[11].setValue(fir_fpb2)

          elif(num==13):
               fir_fsb2 = fir_options[13].value()
               fir_options[14].setValue(fir_fsb2)    
          elif(num==14):
               fir_fsb2 = fir_options[14].value()
               fir_options[13].setValue(fir_fsb2)
 
          elif(num==15):
               fir_ap = fir_options[15].value()
               fir_options[16].setValue(fir_ap)    
          elif(num==16):
               fir_ap = fir_options[16].value()
               fir_options[15].setValue(int(fir_ap))

          elif(num==17):
               fir_as = fir_options[17].value()
               fir_options[18].setValue(fir_as)
          elif(num==18):
               fir_as = fir_options[18].value()
               fir_options[17].setValue(fir_as)

     elif(type_num ==1):
          
          if(num==0):
               fir_filter_type = fir_options[0].currentIndex()
               fir_fs          = fir_options[2].value()
               fir_fpb0        = fir_options[3].value()
               fir_fsb0        = fir_options[5].value()
               fir_fpb1        = fir_options[7].value()
               fir_fsb1        = fir_options[9].value()
               fir_fpb2        = fir_options[11].value()
               fir_fsb2        = fir_options[13].value()
               fir_ap          = fir_options[16].value()
               fir_as          = fir_options[17].value()
               win=1
          
               del_p = (pow(10, fir_ap/20) - 1)/(pow(10, fir_ap/20) + 1)
               del_s = pow(10, -fir_as/20)
               del_c = min(del_p, del_s)
               fir_a = -20*math.log(del_c,10)
               for i in range(5,1,-1):
                    if(fir_window[i][0]<fir_a):
                         win=i
                         break
                    else:
                         win=1
                         
               if (fir_fs == 0):
                    err_msg('Sampling Frequency Set to 0')
               else:
                    if((fir_filter_type==0)|(fir_filter_type==1)):
                         wp = 2*math.pi*fir_fpb0/fir_fs
                         ws = 2*math.pi*fir_fsb0/fir_fs
                         wc = 0.5*(wp + ws)
                         del_w = (ws-wp)
                         if(del_w ==0):
                              err_msg("Set Frequency Range")
                         else:
                              fir_fil_len = math.ceil(fir_window[win][1]*math.pi/abs(del_w))
                              if(not(fir_fil_len&1)):
                                   fir_fil_len=fir_fil_len+1
                              fir_fil_len = fir_fil_len+2
                              if(fir_fil_len>500):
                                   fir_fil_len=501 
                              ui.fir_n_val.setText(str(fir_fil_len))
               
                              if (fir_filter_type==0):
                                   if (del_w<=0):
                                        err_msg('Set Frequency Correctly')
                                   else:
                                        filter_coeff = signal.firwin(fir_fil_len, wc/(math.pi),pass_zero = 'lowpass',window=fir_window[win][2])
                                        info_msg("Filter Designed")

                              else:
                                   if (del_w>=0):
                                        err_msg('Set Frequency Correctly')
                                   else:
                                        filter_coeff = signal.firwin(fir_fil_len, wc/(math.pi),pass_zero = 'highpass',window=fir_window[win][2])
                                        info_msg("Filter Designed")


                              
                    elif((fir_filter_type==2)|(fir_filter_type==3)):
                         wp1 = 2*math.pi*fir_fpb1/fir_fs
                         ws1 = 2*math.pi*fir_fsb1/fir_fs
                         wp2 = 2*math.pi*fir_fpb2/fir_fs
                         ws2 = 2*math.pi*fir_fsb2/fir_fs
                         wc1 = 0.5*(wp1 + ws1)
                         wc2 = 0.5*(wp2 + ws2)
                         del_w1 = (ws1-wp1)
                         del_w2 = (ws2-wp2)
                         del_w = min(del_w1,del_w2)
                         if(del_w ==0):
                              err_msg("Set Frequency Range")
                         else:
                              fir_fil_len = math.ceil(fir_window[win][1]*math.pi/abs(del_w))
                              if(not(fir_fil_len&1)):
                                   fir_fil_len=fir_fil_len+1
                              fir_fil_len = fir_fil_len+2
                              if(fir_fil_len>500):
                                   fir_fil_len=501 
                              ui.fir_n_val.setText(str(fir_fil_len))

                              if(fir_filter_type==2):
                                   if((del_w1>=0)|(del_w2<=0)|(wc1>=wc2)):
                                        err_msg('Set Frequency Correctly')
                                   else:
                                        filter_coeff = signal.firwin(fir_fil_len, [wc1/math.pi, wc2/math.pi],pass_zero = 'bandpass',window=fir_window[win][2])
                                        info_msg("Filter Designed")
                                        
                              if(fir_filter_type==3):
                                   if((del_w1>=0)|(del_w2>=0)|(wc1>=wc2)):
                                        err_msg('Set Frequency Correctly')
                                   else:
                                        filter_coeff = signal.firwin(fir_fil_len, [wc1/math.pi, wc2/math.pi],pass_zero = 'bandstop',window=fir_window[win][2])
                                        info_msg("Filter Designed")
                                        
          elif(num==1):
               try:
                    data = {'Value of n':range(0,fir_fil_len),
                            'Value of filter_coeffcient':filter_coeff}
                    df = pd.DataFrame(data)
                    print(df)

               except:
                    err_msg("Filter Not Designed")
               
          elif(num==2):
               try:
                    send_params("FIR",fir_fs,fir_fil_len,filter_coeff)
               except:
                    err_msg("Filter Not Designed")
               
          elif(num==3):
               try:
                    filter_coeff_fft("FIR",filter_coeff,1,fir_fs)
               except:
                    err_msg("Filter Not Designed")

          elif(num==4):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:
                         plot_filter_data("FDATA",1,fir_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")
                    
          elif(num==5):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:
                         plot_filter_data("FDATA",0,fir_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")

def func_iir_options(type_num,num):
     global iir_filter_type, iir_filter_func_type
     global iir_fs,iir_fpb0,iir_fsb0,iir_fpb1,iir_fsb1,iir_fpb2,iir_fsb2,iir_ap,iir_as
     global iir_fil_len,iir_coeff_a, iir_coeff_b
     
     if (type_num ==0):

          if(num ==0):
               iir_filter_type = iir_options[0].currentIndex()
               if((iir_filter_type == 0)|(iir_filter_type == 1)):
                    for i in range(7,15):
                         iir_options[i].setEnabled(0)
                    for i in range(3,7):
                         iir_options[i].setEnabled(1)
               if((iir_filter_type == 2)|(iir_filter_type == 3)):
                    for i in range(3,7):
                         iir_options[i].setEnabled(0)
                    for i in range(7,15):
                         iir_options[i].setEnabled(1);

          elif(num==1):
               iir_fs = int(iir_options[1].value()/1000)*1000
               iir_options[2].setValue(iir_fs)
               for i in range(3,15,2):
                    iir_options[i].setMaximum(int(iir_fs/2))
                    iir_options[i].setSingleStep(int(iir_fs/(2*10)))
                    iir_options[i].setTickInterval(int(iir_fs/(2*10)))
               for i in range(4,16,2):
                    iir_options[i].setMaximum(int(iir_fs/2))
                    iir_options[i].setSingleStep(int(iir_fs/(2*100)))

          elif(num==2):
               iir_fs = int(iir_options[2].value()/1000)*1000
               iir_options[1].setValue(iir_fs)
               for i in range(3,15,2):
                    iir_options[i].setMaximum(int(iir_fs/2))
                    iir_options[i].setSingleStep(int(iir_fs/(2*10)))
                    iir_options[i].setTickInterval(int(iir_fs/(2*10)))
               for i in range(4,16,2):
                    iir_options[i].setMaximum(int(iir_fs/2))
                    iir_options[i].setSingleStep(int(iir_fs/(2*100)))
               
          elif(num==3):
               iir_fpb0 = iir_options[3].value()
               iir_options[4].setValue(iir_fpb0)
          elif(num==4):
               iir_fpb0 = iir_options[4].value()
               iir_options[3].setValue(iir_fpb0)

          elif(num==5):
               iir_fsb0 = iir_options[5].value()
               iir_options[6].setValue(iir_fsb0)    
          elif(num==6):
               iir_fsb0 = iir_options[6].value()
               iir_options[5].setValue(iir_fsb0)

          elif(num==7):
               iir_fpb1 = iir_options[7].value()
               iir_options[8].setValue(iir_fpb1)    
          elif(num==8):
               iir_fpb1 = iir_options[8].value()
               iir_options[7].setValue(iir_fpb1)

          elif(num==9):
               iir_fsb1 = iir_options[9].value()
               iir_options[10].setValue(iir_fsb1)    
          elif(num==10):
               iir_fsb1 = iir_options[10].value()
               iir_options[9].setValue(iir_fsb1)

          elif(num==11):
               iir_fpb2 = iir_options[11].value()
               iir_options[12].setValue(iir_fpb2)    
          elif(num==12):
               iir_fpb2 = iir_options[12].value()
               iir_options[11].setValue(iir_fpb2)

          elif(num==13):
               iir_fsb2 = iir_options[13].value()
               iir_options[14].setValue(iir_fsb2)    
          elif(num==14):
               iir_fsb2 = iir_options[14].value()
               iir_options[13].setValue(iir_fsb2)
 
          elif(num==15):
               iir_ap = iir_options[15].value()
               iir_options[16].setValue(iir_ap)    
          elif(num==16):
               iir_ap = iir_options[16].value()
               iir_options[15].setValue(int(iir_ap))

          elif(num==17):
               iir_as = iir_options[17].value()
               iir_options[18].setValue(iir_as)
          elif(num==18):
               iir_as = iir_options[18].value()
               iir_options[17].setValue(iir_as)

     elif(type_num ==1):
          
          if(num==0):
               iir_filter_type = iir_options[0].currentIndex()
               iir_fs          = iir_options[2].value()
               iir_fpb0        = iir_options[3].value()
               iir_fsb0        = iir_options[5].value()
               iir_fpb1        = iir_options[7].value()
               iir_fsb1        = iir_options[9].value()
               iir_fpb2        = iir_options[11].value()
               iir_fsb2        = iir_options[13].value()
               iir_ap          = iir_options[16].value()
               iir_as          = iir_options[17].value()
               iir_filter_func = iir_options[19].currentIndex()


               if (iir_fs == 0):
                    err_msg('Sampling Frequency Set to 0')
               else:
                    if(iir_filter_type==0):
                         wp = 2*iir_fpb0/iir_fs
                         ws = 2*iir_fsb0/iir_fs
                         wc = 0.5*(wp + ws)
                         if((wp==0)|(ws==0)):
                              err_msg('Cutoff Freq Set to 0')
                         elif(not(wp<=ws)):
                              err_msg('Set Frequency Correctly')
                         else:
                              b,a = signal.iirdesign(wp, ws, iir_ap, iir_as, ftype = iir_filter_func_list[iir_filter_func])
                              order = len(a) - 1
                              ui.iir_n_val.setText(str(order))
                              iir_fil_len = len(a)
                              iir_coeff_b,iir_coeff_a = signal.iirfilter(order, wc,iir_ap, iir_as,'lowpass',False,iir_filter_func_list[iir_filter_func])
                              info_msg("Filter Designed")
                              
                    elif(iir_filter_type==1):
                         wp = 2*iir_fpb0/iir_fs
                         ws = 2*iir_fsb0/iir_fs
                         wc = 0.5*(wp + ws)
                         if((wp==0)|(ws==0)):
                              err_msg('Cutoff Freq Set to 0')
                         elif(not(wp>=ws)):
                              err_msg('Set Frequency Correctly')
                         else:
                              b,a = signal.iirdesign(wp, ws, iir_ap, iir_as, ftype = iir_filter_func_list[iir_filter_func])
                              order = len(a) - 1
                              ui.iir_n_val.setText(str(order))
                              iir_fil_len = len(a)
                              iir_coeff_b,iir_coeff_a = signal.iirfilter(order, wc,iir_ap, iir_as,'highpass',False,iir_filter_func_list[iir_filter_func])
                              info_msg("Filter Designed")
                              
                    elif(iir_filter_type==2):
                         wp1 = 2*iir_fpb1/iir_fs
                         ws1 = 2*iir_fsb1/iir_fs
                         wp2 = 2*iir_fpb2/iir_fs
                         ws2 = 2*iir_fsb2/iir_fs
                         wc1=0.5*(wp1+ws1)
                         wc2=0.5*(wp2+ws2)
                         if((wp1==0)|(ws1==0)|(wp2==0)|(ws2==0)):
                              err_msg('Cutoff Freq Set to 0')
                         elif(not((ws1<=wp1)&(wp2<=ws2)&(wc1<wc2))):
                              err_msg('Set Frequency Correctly')
                         else:
                              wp=[wp1,wp2]
                              ws=[ws1,ws2]
                              b,a = signal.iirdesign(wp, ws, iir_ap, iir_as, ftype = iir_filter_func_list[iir_filter_func])
                              order = int((len(a) - 1)/2)
                              ui.iir_n_val.setText(str(order))
                              iir_fil_len = len(a)
                              wc=[wc1,wc2]
                              iir_coeff_b,iir_coeff_a = signal.iirfilter(order, wc,iir_ap, iir_as,'bandpass',False,iir_filter_func_list[iir_filter_func])
                              info_msg("Filter Designed")
                              
                    elif(iir_filter_type==3):
                         wp1 = 2*iir_fpb1/iir_fs
                         ws1 = 2*iir_fsb1/iir_fs
                         wp2 = 2*iir_fpb2/iir_fs
                         ws2 = 2*iir_fsb2/iir_fs
                         wc1=0.5*(wp1+ws1)
                         wc2=0.5*(wp2+ws2)
                         if((wp1==0)|(ws1==0)|(wp2==0)|(ws2==0)):
                              err_msg('Cutoff Freq Set to 0')
                         elif(not((wp1<=ws1)&(ws2<=wp2)&(wc1<wc2))):
                              err_msg('Set Frequency Correctly')
                         else:
                              wp=[wp1,wp2]
                              ws=[ws1,ws2]
                              b,a = signal.iirdesign(wp, ws, iir_ap, iir_as, ftype = iir_filter_func_list[iir_filter_func])
                              order = int((len(a) - 1)/2)
                              ui.iir_n_val.setText(str(order))
                              iir_fil_len = len(a)
                              wc=[wc1,wc2]
                              iir_coeff_b,iir_coeff_a = signal.iirfilter(order, wc,iir_ap, iir_as,'bandstop',False,iir_filter_func_list[iir_filter_func])
                              info_msg("Filter Designed")
                              
          elif(num==1):
               try:
                    data = {'Value of n':range(0,iir_fil_len),
                            'Value of a coeffcients':iir_coeff_a,
                            'Value of b coeffcients':iir_coeff_b}
                    df = pd.DataFrame(data)
                    print(df)
               except:
                    err_msg("Filter Not Designed")
                    
          elif(num==2):
               try:
                    send_params("IIR",iir_fs,iir_fil_len,iir_coeff_b,iir_coeff_a)
               except:
                    err_msg("Filter Not Designed")
                    
          elif(num==3):
               try:
                    filter_coeff_fft("IIR",iir_coeff_b,iir_coeff_a,iir_fs)
               except:
                    err_msg("Filter Not Designed")
                    
          elif(num==4):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:                                         
                         plot_filter_data("FDATA",1,iir_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")
                    
          elif(num==5):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else: 
                         plot_filter_data("FDATA",0,iir_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")

def func_fft_options(type_num,num):
     global fft_fs,fft_size

     if (type_num == 0):
          if(num ==0):
               fft_fs = int(fft_options[0].value()/1000)*1000
               fft_options[1].setValue(fft_fs)
          elif(num==1):
               fft_fs = int(fft_options[1].value()/1000)*1000
               fft_options[0].setValue(fft_fs)
          
          elif(num==2):
               fft_size = fft_options[2].value()
               fft_options[3].setValue(fft_size)
               
          elif(num==3):
               fft_size = fft_options[3].value()
               fft_options[2].setValue(fft_size)  
     
     elif(type_num ==1):
          if(num==0):
               fft_fs = fft_options[1].value()
               fft_size = fft_options[3].value()
               
               if (fft_fs == 0):
                    err_msg('Sampling Frequency Set to 0')
               else:
                    if(fft_size == 0):
                         err_msg('Array Size Set as 0')
                    else:
                         k = 1
                         while k < fft_size:
                              k = k << 1
                         fft_options[2].setValue(k)
                         fft_options[3].setValue(k)
                         
                         send_params("FFT",fft_fs, k)
          
          if(num ==1):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else: 
                         plot_con_fft_data("ODATA",fft_size,fft_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")
     
def func_conv_options(type_num,num):
     global conv_fs,conv_num_sig,conv_size

     if (type_num ==0):
          if(num ==0):
               conv_fs = int(conv_options[0].value()/1000)*1000
               conv_options[1].setValue(conv_fs)
          elif(num==1):
               conv_fs = int(conv_options[1].value()/1000)*1000
               conv_options[0].setValue(conv_fs)
          
          elif(num==3):
               conv_size = conv_options[3].value()
               conv_options[4].setValue(conv_size)
               
          elif(num==4):
               conv_size = conv_options[4].value()
               conv_options[3].setValue(conv_size)  
     
     elif(type_num ==1):
          if(num==0):
               conv_fs = conv_options[1].value()
               conv_num_sig = conv_options[2].currentIndex()
               conv_size = conv_options[4].value()
               
               if (conv_fs == 0):
                    err_msg('Sampling Frequency Set to 0')
               else:
                    if(conv_size == 0):
                         err_msg('Array Size Set as 0')
                    else:
                         k = 1
                         while k < conv_size:
                              k = k << 1
                         conv_options[3].setValue(k)
                         conv_options[4].setValue(k)
                         
                         send_params("CONV",conv_fs, k ,conv_num_sig)

          if(num ==1):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:  
                         plot_conv_data("ODATA",conv_size,1,conv_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")

          if(num ==2):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:  
                         plot_conv_data("ODATA",conv_size,0,conv_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")

def func_iir_notch_options(type_num,num):
     global iir_notch_fs,iir_notch_fc,iir_notch_a
     global iir_notch_coeff_a, iir_notch_coeff_b
     if (type_num ==0):
          if(num ==0):
               iir_notch_fs = int(iir_notch_options[0].value()/1000)*1000
               iir_notch_options[1].setValue(iir_notch_fs)
               iir_notch_options[2].setMaximum(int(iir_notch_fs/2))
               iir_notch_options[2].setSingleStep(int(iir_notch_fs/(2*10)))
               iir_notch_options[2].setTickInterval(int(iir_notch_fs/(2*10)))
               
               iir_notch_options[3].setMaximum(int(iir_notch_fs/2))
               iir_notch_options[3].setSingleStep(int(iir_notch_fs/(2*100)))
               
          elif(num==1):
               iir_notch_fs = int(iir_notch_options[1].value()/1000)*1000
               iir_notch_options[0].setValue(iir_notch_fs)
               iir_notch_options[2].setMaximum(int(iir_notch_fs/2))
               iir_notch_options[2].setSingleStep(int(iir_notch_fs/(2*10)))
               iir_notch_options[2].setTickInterval(int(iir_notch_fs/(2*10)))
               
               iir_notch_options[3].setMaximum(int(iir_notch_fs/2))
               iir_notch_options[3].setSingleStep(int(iir_notch_fs/(2*100)))
               
          elif(num==2):
               iir_notch_fc = iir_notch_options[2].value()
               iir_notch_options[3].setValue(iir_notch_fc)
               
          elif(num==3):
               iir_notch_fc = iir_notch_options[3].value()
               iir_notch_options[2].setValue(iir_notch_fc)
               
     elif(type_num ==1):
          
          if(num==0):
               iir_notch_fs   = iir_notch_options[1].value()
               iir_notch_fc   = iir_notch_options[3].value()
               iir_notch_a    = iir_notch_options[4].value()

               if (iir_notch_fs == 0):
                    err_msg('Sampling Frequency Set to 0')
               else:
                    if(iir_notch_fc == 0):
                         err_msg('Cutoff Freq Set to 0')
                    else:
                         
                         w = 2*iir_notch_fc/iir_notch_fs
                         bw = 1/(1 - iir_notch_a)
                         iir_notch_coeff_b, iir_notch_coeff_a = signal.iirnotch(w,bw)
                         info_msg("Filter Designed")
                              
               
          elif(num==1):

                try:
                     data = {'Value of n':range(0,3),
                            'Value of a coeffcients':iir_notch_coeff_a,
                            'Value of b coeffcients':iir_notch_coeff_b}
                     df = pd.DataFrame(data)
                     print(df)
                except:
                     err_msg("Filter Not Designed")
                    
          elif(num==2):
               try:
                    send_params(type="IIR",fs=iir_notch_fs,n=3,b_coeff=iir_notch_coeff_b,a_coeff=iir_notch_coeff_a)
               except:
                    err_msg("Filter Not Designed")
                    
          elif(num==3):
               try:
                    filter_coeff_fft("IIR",iir_notch_coeff_b,iir_notch_coeff_a,iir_notch_fs)
               except:
                    err_msg("Filter Not Designed")
                    
          elif(num==4):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:                                         
                         plot_filter_data("FDATA",1,iir_notch_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")
                    
          elif(num==5):
               try:
                    if(ser.is_open==False):
                         err_msg("No Device Connection")
                    else:                                         
                         plot_filter_data("FDATA",0,iir_notch_fs)
               except:
                    err_msg("Problem in Serial Connection. Try Reconnecting")
                         
def func_goertz_options(type_num,num):
    
     if(type_num==0): 
          time_factor = 10
          fs=100000
          t= np.linspace(0,1/time_factor,int(fs/time_factor))
          row = num%4
          column = int(num/4)
          x = np.sin(2*np.pi*goertz_freq[0][row]*t) + np.sin(2*np.pi*goertz_freq[1][column]*t)
          sd.play(x,fs)
    
     if(type_num ==1):
          type = "GOERTZ"
          try:
               if(ser.is_open==False):
                    err_msg("No Device Connection")
               else:                                         
                    ser.write(str.encode(str(type)+'\n'))
          except:
               err_msg("Problem in Serial Connection. Try Reconnecting")

def func_sig_py_options(type_num,num):
     global sig_py_fs,sig_py_time
     global sig_py_fs_1,sig_py_fs_2,sig_py_fs_3,sig_py_fs_4
     global py_sig_type_1,py_sig_type_2,py_sig_type_3,py_sig_type_4
     global py_sig_en_1,py_sig_en_2,py_sig_en_3,py_sig_en_4
     if (type_num ==0):

          if(num ==0):
               sig_py_fs = int(sig_py_options[0].value()/10000)*10000
               sig_py_options[1].setValue(sig_py_fs)
               if (sig_py_fs>=40000):
                    temp_fs = 10000
               else:
                    temp_fs = int(sig_py_fs/5)

               for i in range(8,12):
                    sig_py_options[i].setMaximum(int(temp_fs))
                    sig_py_options[i].setSingleStep(int(temp_fs/10))
                    sig_py_options[i].setTickInterval(int(temp_fs/10))
               for i in range(12,16):
                    sig_py_options[i].setMaximum(int(temp_fs))
                    sig_py_options[i].setSingleStep(int(temp_fs/100))

          elif(num==1):
               sig_py_fs = int(sig_py_options[1].value()/10000)*10000
               sig_py_options[0].setValue(sig_py_fs)
               if (sig_py_fs>=40000):
                    temp_fs = 10000
               else:
                    temp_fs = int(sig_py_fs/5)

               for i in range(8,12):
                    sig_py_options[i].setMaximum(int(temp_fs))
                    sig_py_options[i].setSingleStep(int(temp_fs/10))
                    sig_py_options[i].setTickInterval(int(temp_fs/10))
               for i in range(12,16):
                    sig_py_options[i].setMaximum(int(temp_fs))
                    sig_py_options[i].setSingleStep(int(temp_fs/100))

          elif(num ==2):
               sig_py_time = int(sig_py_options[2].value())
               sig_py_options[3].setValue(sig_py_time)
          elif(num==3):
               sig_py_time = sig_py_options[3].value()
               sig_py_options[2].setValue(int(sig_py_time))  
          
          elif(num==8):
               sig_py_fs_1 = sig_py_options[8].value()
               sig_py_options[12].setValue(sig_py_fs_1)    
          elif(num==12):
               sig_py_fs_1 = sig_py_options[12].value()
               sig_py_options[8].setValue(sig_py_fs_1)

          elif(num==9):
               sig_py_fs_2 = sig_py_options[9].value()
               sig_py_options[13].setValue(sig_py_fs_2)    
          elif(num==13):
               sig_py_fs_2 = sig_py_options[13].value()
               sig_py_options[9].setValue(sig_py_fs_2)

          elif(num==10):
               sig_py_fs_3 = sig_py_options[10].value()
               sig_py_options[14].setValue(sig_py_fs_3)    
          elif(num==14):
               sig_py_fs_3 = sig_py_options[14].value()
               sig_py_options[10].setValue(sig_py_fs_3)

          elif(num==11):
               sig_py_fs_4 = sig_py_options[11].value()
               sig_py_options[15].setValue(sig_py_fs_4)    
          elif(num==15):
               sig_py_fs_4 = sig_py_options[15].value()
               sig_py_options[11].setValue(sig_py_fs_4)
     
     elif(type_num ==1):

          if(num==2):
               sd.stop()
          else:
               py_sig_type    = [None] * 4
               py_sig_fs      = [None] * 4
               py_sig_en      = [None] * 4
               py_sig_type[0] = sig_py_options[4].currentIndex()
               py_sig_type[1] = sig_py_options[5].currentIndex()
               py_sig_type[2] = sig_py_options[6].currentIndex()
               py_sig_type[3] = sig_py_options[7].currentIndex()
               py_sig_fs[0] = sig_py_options[12].value()
               py_sig_fs[1] = sig_py_options[13].value()
               py_sig_fs[2] = sig_py_options[14].value()
               py_sig_fs[3] = sig_py_options[15].value()
               py_sig_en[0] = sig_py_options[16].isChecked()
               py_sig_en[1] = sig_py_options[17].isChecked()
               py_sig_en[2] = sig_py_options[18].isChecked()
               py_sig_en[3] = sig_py_options[19].isChecked()
               sig_py_fs    = sig_py_options[1].value()
               sig_py_time  = sig_py_options[3].value()

               if(sig_py_fs==0):
                    err_msg("Sampling Frequency set to 0")
               elif(sig_py_time==0):
                    err_msg("Time of signal set to 0")
               elif(sum(py_sig_en)==0):
                    err_msg("No signal is enabled")
               else:
                    t = np.linspace(0,sig_py_time,sig_py_time*sig_py_fs)
                    sig_plot=np.zeros((4,sig_py_time*sig_py_fs))
                    sig_out =np.zeros(sig_py_time*sig_py_fs)
                    fs_arr=[]   
                    for i in range(0,4):
                         if(py_sig_en[i]==1):
                              if((py_sig_fs[i]==0)&(py_sig_type[i]!=4)):
                                   err_msg(f"Signal Frequency is set to 0 for {i+1} signal")
                              else:
                                   if(py_sig_type[i]==0):
                                        sig = np.sin(2*np.pi*py_sig_fs[i]*t)
                                   elif(py_sig_type[i]==1):
                                        sig = signal.square(2 * np.pi * py_sig_fs[i] * t)
                                   elif(py_sig_type[i]==2):
                                        sig = signal.sawtooth(2 * np.pi * py_sig_fs[i] * t,0.5)
                                   elif(py_sig_type[i]==3):
                                        sig = signal.sawtooth(2 * np.pi * py_sig_fs[i] * t,1)
                                   elif(py_sig_type[i]==4):
                                        sig = np.random.rand(1,len(t))
                                        sig = sig[0]*2-1
                                   
                                   sig_plot[i] = sig
                                   
                                   if(py_sig_type[i]!=4):
                                        fs_arr.append(py_sig_fs[i])
                              
                              sig_out = np.add(sig_out, sig_plot[i])
                              
                    
                    if(num ==0):
                         if plt.fignum_exists(1)==True:
                              plt.close()

                         if plt.fignum_exists(1)==False:
                              fig, (ax1, ax2) = plt.subplots(2)
                              fs_arr = np.array(fs_arr)
                              if(len(fs_arr)==0):
                                   arr_size=200
                              else:
                                   min_fs = np.min(fs_arr[np.nonzero(fs_arr)])
                                   arr_size = 5*int(sig_py_fs/min_fs)
                              ax1.plot(sig_out[0:arr_size])
                              ax1.set_ylabel("Amplitude")
                              ax1.set_title("Time Based Output")
                              fft_size=4096
                              inp_abs = abs(np.array(fft(sig_out[0:arr_size], fft_size)))
                              inp_abs = inp_abs[0:int(fft_size/2)]
                              freq = np.linspace(0, 1, int(fft_size/2))*sig_py_fs/2
                              if(sig_py_fs>=20000):
                                   size_limit = int(2*10000/sig_py_fs*(fft_size/2))
                              else:
                                   size_limit=fft_size/2
                              ax2.plot(freq[0:size_limit],inp_abs[0:size_limit])
                              ax2.grid()
                              ax2.set_ylabel("Normalised Amplitude")
                              ax2.set_xlabel("Frequency Range")
                              ax2.set_title("FFT Of the Output")
                              fig.show()    

                    if(num==1):
                         sd.stop()
                         sd.play(sig_out,sig_py_fs)      

def err_msg(val):
     msg = QMessageBox()
     msg.setIcon(QMessageBox.Critical)
     msg.setText("Error")
     msg.setInformativeText(val)
     msg.setWindowTitle("Error")
     msg.exec_()

def info_msg(val):
     msg = QMessageBox()
     msg.setIcon(QMessageBox.Information)
     msg.setText("Info")
     msg.setInformativeText(val)
     msg.setWindowTitle("Info")
     msg.exec_()
     
init_settings()

#front page buttons
front_buttons[0].clicked.connect(func_connect_con)
front_buttons[9].clicked.connect(func_close_con)
front_buttons[1].clicked.connect(lambda x:set_page(1))
front_buttons[2].clicked.connect(lambda x:set_page(2))
front_buttons[3].clicked.connect(lambda x:set_page(3))
front_buttons[4].clicked.connect(lambda x:set_page(4))
front_buttons[5].clicked.connect(lambda x:set_page(5))
front_buttons[6].clicked.connect(lambda x:set_page(6))
front_buttons[7].clicked.connect(lambda x:set_page(7))
front_buttons[8].clicked.connect(lambda x:set_page(8))

#per page back buttons
for i in range(8):
     back_buttons[i].clicked.connect(init_settings)

#signal_generator_controller
sig_gen_buttons[0].currentIndexChanged.connect(lambda x:func_sig_gen_con(0))
sig_gen_buttons[1].valueChanged.connect(lambda x:func_sig_gen_con(1))
sig_gen_buttons[2].valueChanged.connect(lambda x:func_sig_gen_con(2))
sig_gen_buttons[3].clicked.connect(lambda x:func_sig_gen_con(3))
sig_gen_buttons[4].clicked.connect(lambda x:func_sig_gen_con(4))

#fir options
fir_options[0].currentIndexChanged.connect(lambda x:func_fir_options(0,0))
fir_options[1].valueChanged.connect(lambda x:func_fir_options(0,1))
fir_options[2].valueChanged.connect(lambda x:func_fir_options(0,2))
fir_options[3].valueChanged.connect(lambda x:func_fir_options(0,3))
fir_options[4].valueChanged.connect(lambda x:func_fir_options(0,4))
fir_options[5].valueChanged.connect(lambda x:func_fir_options(0,5))
fir_options[6].valueChanged.connect(lambda x:func_fir_options(0,6))
fir_options[7].valueChanged.connect(lambda x:func_fir_options(0,7))
fir_options[8].valueChanged.connect(lambda x:func_fir_options(0,8))
fir_options[9].valueChanged.connect(lambda x:func_fir_options(0,9))
fir_options[10].valueChanged.connect(lambda x:func_fir_options(0,10))
fir_options[11].valueChanged.connect(lambda x:func_fir_options(0,11))
fir_options[12].valueChanged.connect(lambda x:func_fir_options(0,12))
fir_options[13].valueChanged.connect(lambda x:func_fir_options(0,13))
fir_options[14].valueChanged.connect(lambda x:func_fir_options(0,14))
fir_options[15].valueChanged.connect(lambda x:func_fir_options(0,15))
fir_options[16].valueChanged.connect(lambda x:func_fir_options(0,16))
fir_options[17].valueChanged.connect(lambda x:func_fir_options(0,17))
fir_options[18].valueChanged.connect(lambda x:func_fir_options(0,18))

#fir buttons
fir_buttons[0].clicked.connect(lambda x:func_fir_options(1,0))
fir_buttons[1].clicked.connect(lambda x:func_fir_options(1,1))
fir_buttons[2].clicked.connect(lambda x:func_fir_options(1,2))
fir_buttons[3].clicked.connect(lambda x:func_fir_options(1,3))
fir_buttons[4].clicked.connect(lambda x:func_fir_options(1,4))
fir_buttons[5].clicked.connect(lambda x:func_fir_options(1,5))

#iir options
iir_options[0].currentIndexChanged.connect(lambda x:func_iir_options(0,0))
iir_options[1].valueChanged.connect(lambda x:func_iir_options(0,1))
iir_options[2].valueChanged.connect(lambda x:func_iir_options(0,2))
iir_options[3].valueChanged.connect(lambda x:func_iir_options(0,3))
iir_options[4].valueChanged.connect(lambda x:func_iir_options(0,4))
iir_options[5].valueChanged.connect(lambda x:func_iir_options(0,5))
iir_options[6].valueChanged.connect(lambda x:func_iir_options(0,6))
iir_options[7].valueChanged.connect(lambda x:func_iir_options(0,7))
iir_options[8].valueChanged.connect(lambda x:func_iir_options(0,8))
iir_options[9].valueChanged.connect(lambda x:func_iir_options(0,9))
iir_options[10].valueChanged.connect(lambda x:func_iir_options(0,10))
iir_options[11].valueChanged.connect(lambda x:func_iir_options(0,11))
iir_options[12].valueChanged.connect(lambda x:func_iir_options(0,12))
iir_options[13].valueChanged.connect(lambda x:func_iir_options(0,13))
iir_options[14].valueChanged.connect(lambda x:func_iir_options(0,14))
iir_options[15].valueChanged.connect(lambda x:func_iir_options(0,15))
iir_options[16].valueChanged.connect(lambda x:func_iir_options(0,16))
iir_options[17].valueChanged.connect(lambda x:func_iir_options(0,17))
iir_options[18].valueChanged.connect(lambda x:func_iir_options(0,18))

#iir buttons
iir_buttons[0].clicked.connect(lambda x:func_iir_options(1,0))
iir_buttons[1].clicked.connect(lambda x:func_iir_options(1,1))
iir_buttons[2].clicked.connect(lambda x:func_iir_options(1,2))
iir_buttons[3].clicked.connect(lambda x:func_iir_options(1,3))
iir_buttons[4].clicked.connect(lambda x:func_iir_options(1,4))
iir_buttons[5].clicked.connect(lambda x:func_iir_options(1,5))

#conv buttons
conv_options[0].valueChanged.connect(lambda x: func_conv_options(0,0))
conv_options[1].valueChanged.connect(lambda x: func_conv_options(0,1))
conv_options[3].valueChanged.connect(lambda x: func_conv_options(0,3))
conv_options[4].valueChanged.connect(lambda x: func_conv_options(0,4))
conv_options[5].clicked.connect(lambda x: func_conv_options(1,0))
conv_options[6].clicked.connect(lambda x: func_conv_options(1,1))
conv_options[7].clicked.connect(lambda x: func_conv_options(1,2))

#fft buttons
fft_options[0].valueChanged.connect(lambda x: func_fft_options(0,0))
fft_options[1].valueChanged.connect(lambda x: func_fft_options(0,1))
fft_options[2].valueChanged.connect(lambda x: func_fft_options(0,2))
fft_options[3].valueChanged.connect(lambda x: func_fft_options(0,3))
fft_options[4].clicked.connect(lambda x: func_fft_options(1,0))
fft_options[5].clicked.connect(lambda x: func_fft_options(1,1))

#iir_notch_options and buttons
iir_notch_options[0].valueChanged.connect(lambda x:func_iir_notch_options(0,0))
iir_notch_options[1].valueChanged.connect(lambda x:func_iir_notch_options(0,1))
iir_notch_options[2].valueChanged.connect(lambda x:func_iir_notch_options(0,2))
iir_notch_options[3].valueChanged.connect(lambda x:func_iir_notch_options(0,3))
iir_notch_options[5].clicked.connect(lambda x:func_iir_notch_options(1,0))
iir_notch_options[6].clicked.connect(lambda x:func_iir_notch_options(1,1))
iir_notch_options[7].clicked.connect(lambda x:func_iir_notch_options(1,2))
iir_notch_options[8].clicked.connect(lambda x:func_iir_notch_options(1,3))
iir_notch_options[9].clicked.connect(lambda x:func_iir_notch_options(1,4))
iir_notch_options[10].clicked.connect(lambda x:func_iir_notch_options(1,5))

#goertz_buttons
goertz_options[0].clicked.connect(lambda x:func_goertz_options(0,0))
goertz_options[1].clicked.connect(lambda x:func_goertz_options(0,1))
goertz_options[2].clicked.connect(lambda x:func_goertz_options(0,2))
goertz_options[3].clicked.connect(lambda x:func_goertz_options(0,3))
goertz_options[4].clicked.connect(lambda x:func_goertz_options(0,4))
goertz_options[5].clicked.connect(lambda x:func_goertz_options(0,5))
goertz_options[6].clicked.connect(lambda x:func_goertz_options(0,6))
goertz_options[7].clicked.connect(lambda x:func_goertz_options(0,7))
goertz_options[8].clicked.connect(lambda x:func_goertz_options(0,8))
goertz_options[9].clicked.connect(lambda x:func_goertz_options(0,9))
goertz_options[10].clicked.connect(lambda x:func_goertz_options(0,10))
goertz_options[11].clicked.connect(lambda x:func_goertz_options(0,11))
goertz_options[12].clicked.connect(lambda x:func_goertz_options(0,12))
goertz_options[13].clicked.connect(lambda x:func_goertz_options(0,13))
goertz_options[14].clicked.connect(lambda x:func_goertz_options(0,14))
goertz_options[15].clicked.connect(lambda x:func_goertz_options(0,15))
goertz_options[16].clicked.connect(lambda x:func_goertz_options(1,0))

#sig_py_gen buttons
sig_py_options[0].valueChanged.connect(lambda x:func_sig_py_options(0,0))
sig_py_options[1].valueChanged.connect(lambda x:func_sig_py_options(0,1))
sig_py_options[2].valueChanged.connect(lambda x:func_sig_py_options(0,2))
sig_py_options[3].valueChanged.connect(lambda x:func_sig_py_options(0,3))
sig_py_options[8].valueChanged.connect(lambda x:func_sig_py_options(0,8))
sig_py_options[8].valueChanged.connect(lambda x:func_sig_py_options(0,8))
sig_py_options[9].valueChanged.connect(lambda x:func_sig_py_options(0,9))
sig_py_options[10].valueChanged.connect(lambda x:func_sig_py_options(0,10))
sig_py_options[11].valueChanged.connect(lambda x:func_sig_py_options(0,11))
sig_py_options[12].valueChanged.connect(lambda x:func_sig_py_options(0,12))
sig_py_options[13].valueChanged.connect(lambda x:func_sig_py_options(0,13))
sig_py_options[14].valueChanged.connect(lambda x:func_sig_py_options(0,14))
sig_py_options[15].valueChanged.connect(lambda x:func_sig_py_options(0,15))
sig_py_options[20].clicked.connect(lambda x:func_sig_py_options(1,0))
sig_py_options[21].clicked.connect(lambda x:func_sig_py_options(1,1))
sig_py_options[22].clicked.connect(lambda x:func_sig_py_options(1,2))
sys.exit(app.exec_())
